{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { LocalVideoView, MainVideoView } from '../Videoview';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { largestRect } from 'rect-scaler';\n\nconst Gallery = ({\n  id,\n  videoCount,\n  client,\n  localScreen,\n  localStream,\n  audioMuted,\n  videoMuted,\n  streams,\n  onPin,\n  loginInfo,\n  onRequest\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: `relative w-full flex flex-wrap justify-center items-center`,\n    style: {\n      height: 'calc(100vh - 128px)',\n      backgroundColor: '#1a1619'\n    }\n  }, __jsx(ContainerDimensions, null, ({\n    width,\n    height\n  }) => {\n    let w = '100%';\n    let h = '100%';\n\n    if (videoCount > 0) {\n      let largestRectObj = largestRect(width, height, videoCount, 160, 90);\n      w = largestRectObj.width;\n      h = largestRectObj.height;\n    }\n\n    return __jsx(React.Fragment, null, localStream && __jsx(\"div\", {\n      style: {\n        height: h,\n        width: w\n      }\n    }, __jsx(LocalVideoView, {\n      id: id + '-video',\n      label: `${loginInfo.displayName} (You)`,\n      client: client,\n      stream: localStream,\n      audioMuted: audioMuted,\n      videoMuted: videoMuted,\n      videoType: \"localVideo\",\n      onPin: () => {\n        onPin(id + '-video');\n      }\n    })), streams.map((item, index) => {\n      return __jsx(\"div\", {\n        key: item.mid,\n        style: {\n          height: h,\n          width: w\n        }\n      }, __jsx(MainVideoView, {\n        id: item.mid,\n        stream: item.stream,\n        onPin: () => {\n          onPin(item.mid);\n        },\n        audioEnabled: item.audioEnabled,\n        videoEnabled: item.videoEnabled,\n        screenshare: item.screenshare,\n        uid: item.uid,\n        onRequest: onRequest\n      }));\n    }), localScreen && __jsx(\"div\", {\n      style: {\n        height: h,\n        width: w\n      }\n    }, __jsx(LocalVideoView, {\n      id: id + '-screen',\n      label: \"Your Screen\",\n      client: client,\n      stream: localScreen,\n      audioMuted: false,\n      videoMuted: false,\n      videoType: \"localScreen\",\n      onPin: () => {\n        onPin(id + '-screen');\n      }\n    })));\n  })));\n};\n\nexport { Gallery };","map":null,"metadata":{},"sourceType":"module"}