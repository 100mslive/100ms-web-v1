{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Conference.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { notification } from 'antd';\nimport React from 'react';\nimport { AppContext } from '../stores/AppContext';\nimport { Gallery } from './Conference/gallery';\nimport { Pinned } from './Conference/pinned';\nimport { Controls } from './Controls'; // import PeerState, { onRoomStateChange } from '../utils/state';\n\nvar modes = {\n  GALLERY: 'GALLERY',\n  PINNED: 'PINNED'\n};\n\nvar Conference = /*#__PURE__*/function (_React$Component) {\n  _inherits(Conference, _React$Component);\n\n  var _super = _createSuper(Conference);\n\n  function Conference(props) {\n    var _this;\n\n    _classCallCheck(this, Conference);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var client = _this.props.client;\n      client.on('stream-add', _this._handleAddStream);\n      client.on('stream-remove', _this._handleRemoveStream);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      var client = _this.props.client;\n\n      if (client) {\n        client.off('stream-add', _this._handleAddStream);\n        client.off('stream-remove', _this._handleRemoveStream);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cleanUp\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$state, localStream, localScreen, streams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, localStream = _this$state.localStream, localScreen = _this$state.localScreen, streams = _this$state.streams;\n              _context.next = 3;\n              return _this.setState({\n                localStream: null,\n                localScreen: null,\n                streams: []\n              });\n\n            case 3:\n              _context.next = 5;\n              return _this._unpublish(localStream);\n\n            case 5:\n              _context.next = 7;\n              return _this._unpublish(localScreen);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_notification\", function (message, description) {\n      notification.info({\n        message: message,\n        description: description,\n        placement: 'bottomRight'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unpublish\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(stream) {\n        var client;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                client = _this.props.client;\n\n                if (!stream) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _this._stopMediaStream(stream);\n\n              case 4:\n                _context2.next = 6;\n                return client.unpublish(stream, client.rid);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"muteMediaTrack\", function (type, enabled) {\n      var localStream = _this.state.localStream;\n\n      if (!localStream) {\n        return;\n      }\n\n      if (enabled) {\n        localStream.unmute(type);\n      } else {\n        localStream.mute(type);\n      }\n\n      if (type === 'audio') {\n        _this.setState({\n          audioMuted: !enabled\n        }); // this.peerState && this.peerState.update({ audioEnabled: enabled });\n\n      } else if (type === 'video') {\n        _this.setState({\n          videoMuted: !enabled\n        }); // this.peerState && this.peerState.update({ videoEnabled: enabled });\n\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLocalStream\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var localStream, _this$props, client, settings, localVideoEnabled, localAudioEnabled;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              localStream = _this.state.localStream;\n              _this$props = _this.props, client = _this$props.client, settings = _this$props.settings, localVideoEnabled = _this$props.localVideoEnabled, localAudioEnabled = _this$props.localAudioEnabled;\n              console.log('SETTINGS:', settings);\n              client.getLocalStream({\n                codec: settings.codec.toUpperCase(),\n                resolution: settings.resolution,\n                bitrate: settings.bandwidth,\n                frameRate: settings.frameRate,\n                shouldPublishAudio: localAudioEnabled,\n                shouldPublishVideo: localVideoEnabled,\n                advancedMediaConstraints: {\n                  video: {\n                    deviceId: settings.selectedVideoDevice\n                  },\n                  audio: {\n                    deviceId: settings.selectedAudioDevice\n                  }\n                }\n              }).then(function (localStream) {\n                return client.publish(localStream, client.rid);\n              }).then(function (localStream) {\n                _this.setState({\n                  localStream: localStream\n                });\n\n                !localAudioEnabled && _this.muteMediaTrack('audio', _this.state.audioMuted);\n                !localVideoEnabled && _this.muteMediaTrack('video', _this.state.videoMuted);\n              })[\"catch\"](function (error) {\n                _this.props.setLocalStreamError(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScreenSharing\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(enabled) {\n        var localScreen, _this$props2, client, settings, track;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                localScreen = _this.state.localScreen;\n                _this$props2 = _this.props, client = _this$props2.client, settings = _this$props2.settings;\n\n                if (!enabled) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                _context4.next = 5;\n                return client.getLocalScreen({\n                  bitrate: 0,\n                  codec: settings.codec.toUpperCase(),\n                  frameRate: 10\n                });\n\n              case 5:\n                localScreen = _context4.sent;\n                localScreen.getVideoTracks().forEach(function (track) {\n                  if ('contentHint' in track) {\n                    track.contentHint = 'text';\n                  }\n                });\n                console.log({\n                  localScreen: localScreen\n                });\n                _context4.next = 10;\n                return client.publish(localScreen, client.rid);\n\n              case 10:\n                track = localScreen.getVideoTracks()[0];\n\n                if (track) {\n                  track.addEventListener('ended', function () {\n                    _this.handleScreenSharing(false);\n                  });\n                }\n\n                _context4.next = 15;\n                break;\n\n              case 14:\n                if (localScreen) {\n                  _this._unpublish(localScreen);\n\n                  localScreen = null;\n\n                  if (_this.state.mode === modes.PINNED && _this.state.pinned === client.uid + '-screen') {\n                    _this.setState({\n                      mode: modes.GALLERY\n                    });\n                  }\n                }\n\n              case 15:\n                _this.setState({\n                  localScreen: localScreen\n                });\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopMediaStream\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(stream) {\n        var tracks, i, len;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                tracks = stream.getTracks();\n                i = 0, len = tracks.length;\n\n              case 2:\n                if (!(i < len)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                _context5.next = 5;\n                return tracks[i].stop();\n\n              case 5:\n                i++;\n                _context5.next = 2;\n                break;\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleAddStream\", /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(room, peer, streamInfo) {\n        var client, streams, stream;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                client = _this.props.client;\n                streams = _this.state.streams;\n                _context6.prev = 2;\n                _context6.next = 5;\n                return client.subscribe(streamInfo.mid, room);\n\n              case 5:\n                stream = _context6.sent;\n                stream.info = {\n                  name: peer.name\n                }; // @NOTE: Just because stream is expected to have info in this format at the moment by the UI\n\n                if (_this.state.streamInfo, stream.mid) {\n                  streams.push(_objectSpread({\n                    mid: stream.mid,\n                    stream: stream,\n                    sid: streamInfo.mid\n                  }, _this.state.streamInfo[stream.mid]));\n                } else {\n                  streams.push({\n                    mid: stream.mid,\n                    stream: stream,\n                    sid: streamInfo.mid\n                  });\n                }\n\n                _this.setState({\n                  streams: streams\n                });\n\n                _context6.next = 15;\n                break;\n\n              case 11:\n                _context6.prev = 11;\n                _context6.t0 = _context6[\"catch\"](2);\n\n                _this._notification(\"ERROR: Error in subscribing\", _context6.t0.message);\n\n                _this.props.cleanUp();\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[2, 11]]);\n      }));\n\n      return function (_x4, _x5, _x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleRemoveStream\", /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(room, peer, streamInfo) {\n        var streams;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                // `room` might be used later in future\n                streams = _this.state.streams;\n                streams = streams.filter(function (item) {\n                  return item.sid !== streamInfo.mid;\n                });\n\n                _this.setState({\n                  streams: streams\n                });\n\n                if (_this.state.mode === modes.PINNED && _this.state.pinned === streamInfo.mid) {\n                  _this.setState({\n                    mode: modes.GALLERY\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onRequest\", function (uid, request) {// this.peerState && this.peerState.setRequest(uid, request);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChangeVideoPosition\", function (data) {\n      var id = data.id;\n      var index = data.index;\n      console.log('_onChangeVideoPosition id:' + id + '  index:' + index);\n\n      if (index == 0) {\n        return;\n      }\n\n      var streams = _this.state.streams;\n      var first = 0;\n      var big = 0;\n\n      for (var i = 0; i < streams.length; i++) {\n        var item = streams[i];\n\n        if (item.mid == id) {\n          big = i;\n          break;\n        }\n      }\n\n      var c = streams[first];\n      streams[first] = streams[big];\n      streams[big] = c;\n\n      _this.setState({\n        streams: streams\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var _this$props3 = _this.props,\n          client = _this$props3.client,\n          role = _this$props3.role;\n      var _this$state2 = _this.state,\n          streams = _this$state2.streams,\n          localStream = _this$state2.localStream,\n          localScreen = _this$state2.localScreen,\n          audioMuted = _this$state2.audioMuted,\n          videoMuted = _this$state2.videoMuted;\n      var id = client ? client.uid : null;\n      var videoCount = streams.length;\n      if (localStream) videoCount++;\n      if (localScreen) videoCount++;\n      if (client) return __jsx(React.Fragment, null, _this.state.mode === modes.PINNED ? __jsx(Pinned, {\n        streams: streams,\n        audioMuted: audioMuted,\n        videoMuted: videoMuted,\n        videoCount: videoCount,\n        localStream: localStream,\n        localScreen: localScreen,\n        client: client,\n        id: id,\n        loginInfo: _this.props.loginInfo,\n        pinned: _this.state.pinned,\n        onUnpin: function onUnpin() {\n          _this.setState({\n            mode: modes.GALLERY\n          });\n        },\n        onRequest: _this._onRequest,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }) : __jsx(Gallery, {\n        streams: streams,\n        audioMuted: audioMuted,\n        videoMuted: videoMuted,\n        videoCount: videoCount,\n        localStream: localStream,\n        localScreen: localScreen,\n        client: client,\n        id: id,\n        loginInfo: _this.props.loginInfo,\n        onPin: function onPin(streamId) {\n          _this.setState({\n            mode: modes.PINNED,\n            pinned: streamId\n          });\n        },\n        onRequest: _this._onRequest,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }), __jsx(AppContext.Consumer, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }\n      }, function (context) {\n        return __jsx(Controls, {\n          role: role,\n          isMuted: _this.state.audioMuted,\n          isCameraOn: !_this.state.videoMuted,\n          screenSharingEnabled: context.roomState.screenSharingEnabled,\n          onScreenToggle: _this.props.onScreenToggle,\n          onLeave: _this.props.onLeave,\n          onMicToggle: function onMicToggle() {\n            _this.muteMediaTrack('audio', _this.state.audioMuted);\n          },\n          onCamToggle: function onCamToggle() {\n            _this.muteMediaTrack('video', _this.state.videoMuted);\n          },\n          onChatToggle: _this.props.onChatToggle,\n          isChatOpen: _this.props.isChatOpen,\n          loginInfo: _this.props.loginInfo,\n          hasUnreadMessages: _this.props.hasUnreadMessages,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }\n        });\n      }));\n      return __jsx(React.Fragment, null);\n    });\n\n    _this.state = {\n      streams: [],\n      streamInfo: [],\n      localStream: null,\n      localScreen: null,\n      audioMuted: false,\n      videoMuted: false,\n      mode: modes.GALLERY,\n      pinned: false,\n      localStreamError: null\n    };\n    return _this;\n  }\n\n  return Conference;\n}(React.Component);\n\nexport default Conference;","map":{"version":3,"sources":["/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Conference.jsx"],"names":["notification","React","AppContext","Gallery","Pinned","Controls","modes","GALLERY","PINNED","Conference","props","client","on","_handleAddStream","_handleRemoveStream","off","state","localStream","localScreen","streams","setState","_unpublish","message","description","info","placement","stream","_stopMediaStream","unpublish","rid","type","enabled","unmute","mute","audioMuted","videoMuted","settings","localVideoEnabled","localAudioEnabled","console","log","getLocalStream","codec","toUpperCase","resolution","bitrate","bandwidth","frameRate","shouldPublishAudio","shouldPublishVideo","advancedMediaConstraints","video","deviceId","selectedVideoDevice","audio","selectedAudioDevice","then","publish","muteMediaTrack","error","setLocalStreamError","getLocalScreen","getVideoTracks","forEach","track","contentHint","addEventListener","handleScreenSharing","mode","pinned","uid","tracks","getTracks","i","len","length","stop","room","peer","streamInfo","subscribe","mid","name","push","sid","_notification","cleanUp","filter","item","request","data","id","index","first","big","c","role","videoCount","loginInfo","_onRequest","streamId","context","roomState","screenSharingEnabled","onScreenToggle","onLeave","onChatToggle","isChatOpen","hasUnreadMessages","localStreamError","Component"],"mappings":"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","sourcesContent":["import { notification } from 'antd';\nimport React from 'react';\nimport { AppContext } from '../stores/AppContext';\nimport { Gallery } from './Conference/gallery';\nimport { Pinned } from './Conference/pinned';\nimport { Controls } from './Controls';\n// import PeerState, { onRoomStateChange } from '../utils/state';\n\nconst modes = {\n  GALLERY: 'GALLERY',\n  PINNED: 'PINNED',\n};\n\nclass Conference extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: [],\n      streamInfo: [],\n      localStream: null,\n      localScreen: null,\n      audioMuted: false,\n      videoMuted: false,\n      mode: modes.GALLERY,\n      pinned: false,\n      localStreamError: null,\n    };\n  }\n\n  componentDidMount = () => {\n    const { client } = this.props;\n    client.on('stream-add', this._handleAddStream);\n    client.on('stream-remove', this._handleRemoveStream);\n  };\n\n  componentWillUnmount = () => {\n    const { client } = this.props;\n    if (client) {\n      client.off('stream-add', this._handleAddStream);\n      client.off('stream-remove', this._handleRemoveStream);\n    }\n  };\n\n  cleanUp = async () => {\n    let { localStream, localScreen, streams } = this.state;\n    await this.setState({ localStream: null, localScreen: null, streams: [] });\n\n    await this._unpublish(localStream);\n    await this._unpublish(localScreen);\n  };\n\n  _notification = (message, description) => {\n    notification.info({\n      message: message,\n      description: description,\n      placement: 'bottomRight',\n    });\n  };\n\n  _unpublish = async stream => {\n    const { client } = this.props;\n    if (stream) {\n      await this._stopMediaStream(stream);\n      await client.unpublish(stream, client.rid);\n    }\n  };\n\n  muteMediaTrack = (type, enabled) => {\n    let { localStream } = this.state;\n    if (!localStream) {\n      return;\n    }\n    if (enabled) {\n      localStream.unmute(type);\n    } else {\n      localStream.mute(type);\n    }\n\n    if (type === 'audio') {\n      this.setState({ audioMuted: !enabled });\n      // this.peerState && this.peerState.update({ audioEnabled: enabled });\n    } else if (type === 'video') {\n      this.setState({ videoMuted: !enabled });\n      // this.peerState && this.peerState.update({ videoEnabled: enabled });\n    }\n  };\n\n  handleLocalStream = async () => {\n    let { localStream } = this.state;\n    const {\n      client,\n      settings,\n      localVideoEnabled,\n      localAudioEnabled,\n    } = this.props;\n\n    console.log('SETTINGS:', settings);\n\n    client\n      .getLocalStream({\n        codec: settings.codec.toUpperCase(),\n        resolution: settings.resolution,\n        bitrate: settings.bandwidth,\n        frameRate: settings.frameRate,\n        shouldPublishAudio: localAudioEnabled,\n        shouldPublishVideo: localVideoEnabled,\n        advancedMediaConstraints: {\n          video: {\n            deviceId: settings.selectedVideoDevice,\n          },\n          audio: {\n            deviceId: settings.selectedAudioDevice,\n          },\n        },\n      })\n      .then(localStream => {\n        return client.publish(localStream, client.rid);\n      })\n      .then(localStream => {\n        this.setState({ localStream });\n        !localAudioEnabled &&\n          this.muteMediaTrack('audio', this.state.audioMuted);\n        !localVideoEnabled &&\n          this.muteMediaTrack('video', this.state.videoMuted);\n      })\n      .catch(error => {\n        this.props.setLocalStreamError(error);\n      });\n  };\n\n  handleScreenSharing = async enabled => {\n    let { localScreen } = this.state;\n    const { client, settings } = this.props;\n    if (enabled) {\n      localScreen = await client.getLocalScreen({\n        bitrate: 0,\n        codec: settings.codec.toUpperCase(),\n        frameRate: 10,\n      });\n      localScreen.getVideoTracks().forEach(track => {\n        if ('contentHint' in track) {\n          track.contentHint = 'text';\n        }\n      });\n      console.log({ localScreen });\n      await client.publish(localScreen, client.rid);\n      let track = localScreen.getVideoTracks()[0];\n      if (track) {\n        track.addEventListener('ended', () => {\n          this.handleScreenSharing(false);\n        });\n      }\n    } else {\n      if (localScreen) {\n        this._unpublish(localScreen);\n        localScreen = null;\n        if (\n          this.state.mode === modes.PINNED &&\n          this.state.pinned === client.uid + '-screen'\n        ) {\n          this.setState({\n            mode: modes.GALLERY,\n          });\n        }\n      }\n    }\n    this.setState({ localScreen });\n  };\n\n  _stopMediaStream = async stream => {\n    let tracks = stream.getTracks();\n    for (let i = 0, len = tracks.length; i < len; i++) {\n      await tracks[i].stop();\n    }\n  };\n\n  _handleAddStream = async (room, peer, streamInfo) => {\n    const { client } = this.props;\n    let streams = this.state.streams;\n    try {\n      let stream = await client.subscribe(streamInfo.mid, room);\n      stream.info = { name: peer.name }; // @NOTE: Just because stream is expected to have info in this format at the moment by the UI\n      if ((this.state.streamInfo, stream.mid)) {\n        streams.push({\n          mid: stream.mid,\n          stream,\n          sid: streamInfo.mid,\n          ...this.state.streamInfo[stream.mid],\n        });\n      } else {\n        streams.push({ mid: stream.mid, stream, sid: streamInfo.mid });\n      }\n\n      this.setState({ streams });\n    } catch (error) {\n      this._notification(`ERROR: Error in subscribing`, error.message);\n      this.props.cleanUp();\n    }\n  };\n\n  _handleRemoveStream = async (room, peer, streamInfo) => {\n    // `room` might be used later in future\n    let streams = this.state.streams;\n    streams = streams.filter(item => item.sid !== streamInfo.mid);\n    this.setState({ streams });\n    if (\n      this.state.mode === modes.PINNED &&\n      this.state.pinned === streamInfo.mid\n    ) {\n      this.setState({\n        mode: modes.GALLERY,\n      });\n    }\n  };\n\n  _onRequest = (uid, request) => {\n    // this.peerState && this.peerState.setRequest(uid, request);\n  };\n\n  _onChangeVideoPosition = data => {\n    let id = data.id;\n    let index = data.index;\n    console.log('_onChangeVideoPosition id:' + id + '  index:' + index);\n\n    if (index == 0) {\n      return;\n    }\n\n    const streams = this.state.streams;\n    let first = 0;\n    let big = 0;\n    for (let i = 0; i < streams.length; i++) {\n      let item = streams[i];\n      if (item.mid == id) {\n        big = i;\n        break;\n      }\n    }\n\n    let c = streams[first];\n    streams[first] = streams[big];\n    streams[big] = c;\n\n    this.setState({ streams: streams });\n  };\n\n  render = () => {\n    const { client, role } = this.props;\n    const {\n      streams,\n      localStream,\n      localScreen,\n      audioMuted,\n      videoMuted,\n    } = this.state;\n    const id = client ? client.uid : null;\n    let videoCount = streams.length;\n    if (localStream) videoCount++;\n    if (localScreen) videoCount++;\n\n    if (client)\n      return (\n        <>\n          {this.state.mode === modes.PINNED ? (\n            <Pinned\n              streams={streams}\n              audioMuted={audioMuted}\n              videoMuted={videoMuted}\n              videoCount={videoCount}\n              localStream={localStream}\n              localScreen={localScreen}\n              client={client}\n              id={id}\n              loginInfo={this.props.loginInfo}\n              pinned={this.state.pinned}\n              onUnpin={() => {\n                this.setState({\n                  mode: modes.GALLERY,\n                });\n              }}\n              onRequest={this._onRequest}\n            />\n          ) : (\n            <Gallery\n              streams={streams}\n              audioMuted={audioMuted}\n              videoMuted={videoMuted}\n              videoCount={videoCount}\n              localStream={localStream}\n              localScreen={localScreen}\n              client={client}\n              id={id}\n              loginInfo={this.props.loginInfo}\n              onPin={streamId => {\n                this.setState({\n                  mode: modes.PINNED,\n                  pinned: streamId,\n                });\n              }}\n              onRequest={this._onRequest}\n            />\n          )}\n          <AppContext.Consumer>\n            {context => (\n              <Controls\n                role={role}\n                isMuted={this.state.audioMuted}\n                isCameraOn={!this.state.videoMuted}\n                screenSharingEnabled={context.roomState.screenSharingEnabled}\n                onScreenToggle={this.props.onScreenToggle}\n                onLeave={this.props.onLeave}\n                onMicToggle={() => {\n                  this.muteMediaTrack('audio', this.state.audioMuted);\n                }}\n                onCamToggle={() => {\n                  this.muteMediaTrack('video', this.state.videoMuted);\n                }}\n                onChatToggle={this.props.onChatToggle}\n                isChatOpen={this.props.isChatOpen}\n                loginInfo={this.props.loginInfo}\n                hasUnreadMessages={this.props.hasUnreadMessages}\n              />\n            )}\n          </AppContext.Consumer>\n        </>\n      );\n    return <></>;\n  };\n}\nexport default Conference;\n"]},"metadata":{},"sourceType":"module"}