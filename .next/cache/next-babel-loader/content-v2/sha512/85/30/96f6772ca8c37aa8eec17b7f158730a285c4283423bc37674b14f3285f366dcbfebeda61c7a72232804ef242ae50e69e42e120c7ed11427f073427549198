{"ast":null,"code":"import _classCallCheck from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Button, InputNumber, Modal, Select, Tooltip } from 'antd';\nimport { attachMediaStream, closeMediaStream, updateInputDevices } from '../../utils';\nimport SoundMeter from './soundmeter';\nvar Option = Select.Option;\n\nvar MediaSettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(MediaSettings, _React$Component);\n\n  var _super = _createSuper(MediaSettings);\n\n  function MediaSettings(props) {\n    var _this;\n\n    _classCallCheck(this, MediaSettings);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setDeviceState\", function () {\n      updateInputDevices().then(function (data) {\n        if (_this.state.selectedAudioDevice === '' && data.audioDevices.length > 0) {\n          _this.setState({\n            selectedAudioDevice: data.audioDevices[0].deviceId\n          });\n        }\n\n        if (_this.state.selectedVideoDevice === '' && data.videoDevices.length > 0) {\n          _this.setState({\n            selectedVideoDevice: data.videoDevices[0].deviceId\n          });\n        }\n\n        _this.setState({\n          videoDevices: data.videoDevices,\n          audioDevices: data.audioDevices,\n          audioOutputDevices: data.audioOutputDevices\n        });\n\n        _this.state.audioDevices.map(function (device, index) {\n          if (_this.state.selectedAudioDevice == device.deviceId) {\n            console.log('Selected audioDevice::' + JSON.stringify(device));\n          }\n        });\n\n        _this.state.videoDevices.map(function (device, index) {\n          if (_this.state.selectedVideoDevice == device.deviceId) {\n            console.log('Selected videoDevice::' + JSON.stringify(device));\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"soundMeterProcess\", function () {\n      var val = window.soundMeter.instant.toFixed(2) * 348 + 1;\n\n      _this.setState({\n        audioLevel: val\n      });\n\n      if (_this.state.visible) setTimeout(_this.soundMeterProcess, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startPreview\", function () {\n      if (window.stream) {\n        closeMediaStream(window.stream);\n      }\n\n      var videoElement = _this.refs['previewVideo'];\n      var audioSource = _this.state.selectedAudioDevice;\n      var videoSource = _this.state.selectedVideoDevice;\n      _this.soundMeter = window.soundMeter = new SoundMeter(window.audioContext);\n      var soundMeterProcess = _this.soundMeterProcess;\n      var constraints = {\n        audio: {\n          deviceId: audioSource ? {\n            exact: audioSource\n          } : undefined\n        },\n        video: {\n          deviceId: videoSource ? {\n            exact: videoSource\n          } : undefined\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        window.stream = stream; // make stream available to console\n        //videoElement.srcObject = stream;\n\n        attachMediaStream(videoElement, stream);\n        soundMeter.connectToSource(stream);\n        setTimeout(soundMeterProcess, 100);\n\n        _this.setDeviceState();\n      })[\"catch\"](function (error) {\n        _this.props.setLocalStreamError(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopPreview\", function () {\n      if (window.stream) {\n        closeMediaStream(window.stream);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showModal\", function () {\n      _this.setState({\n        visible: true\n      });\n\n      setTimeout(_this.startPreview, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOk\", function (e) {\n      _this.setState({\n        visible: false\n      });\n\n      _this.stopPreview();\n\n      if (_this.props.onMediaSettingsChanged !== undefined) {\n        _this.props.onMediaSettingsChanged(_this.state.selectedAudioDevice, _this.state.selectedVideoDevice, _this.state.resolution, _this.state.bandwidth, _this.state.codec, _this.state.frameRate, _this.state.isDevMode, true);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function (e) {\n      var settings = _this.props.settings;\n\n      _this.setState(_objectSpread(_objectSpread({}, settings), {}, {\n        visible: false\n      }));\n\n      _this.stopPreview();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAudioDeviceChange\", function (e) {\n      _this.setState({\n        selectedAudioDevice: e\n      });\n\n      setTimeout(_this.startPreview, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVideoDeviceChange\", function (e) {\n      _this.setState({\n        selectedVideoDevice: e\n      });\n\n      setTimeout(_this.startPreview, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResolutionChange\", function (e) {\n      _this.setState({\n        resolution: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVideoCodeChange\", function (e) {\n      _this.setState({\n        codec: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBandWidthChange\", function (e) {\n      _this.setState({\n        bandwidth: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFrameRateChange\", function (e) {\n      _this.setState({\n        frameRate: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDevChange\", function (checked) {\n      _this.setState({\n        isDevMode: checked\n      });\n    });\n\n    var _settings = props.settings;\n    _this.state = {\n      visible: false,\n      videoDevices: [],\n      audioDevices: [],\n      audioOutputDevices: [],\n      resolution: _settings.resolution,\n      bandwidth: _settings.bandwidth,\n      selectedAudioDevice: _settings.selectedAudioDevice,\n      selectedVideoDevice: _settings.selectedVideoDevice,\n      codec: _settings.codec,\n      isDevMode: _settings.isDevMode,\n      frameRate: _settings.frameRate\n    };\n\n    try {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      window.audioContext = new AudioContext();\n    } catch (e) {\n      console.log('Web Audio API not supported.');\n    }\n\n    return _this;\n  }\n\n  _createClass(MediaSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setDeviceState();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Tooltip, {\n        title: \"System setup\"\n      }, __jsx(Button, {\n        shape: \"circle\",\n        icon: \"setting\",\n        ghost: true,\n        onClick: this.showModal\n      })), __jsx(Modal, {\n        title: \"Settings\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        okText: \"Ok\",\n        cancelText: \"Cancel\"\n      }, __jsx(\"div\", {\n        className: \"settings-item\"\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\"\n      }, \"Micphone\"), __jsx(\"div\", {\n        className: \"settings-item-right\"\n      }, __jsx(Select, {\n        value: this.state.selectedAudioDevice,\n        style: {\n          width: 350\n        },\n        onChange: this.handleAudioDeviceChange\n      }, this.state.audioDevices.map(function (device, index) {\n        return __jsx(Option, {\n          value: device.deviceId,\n          key: device.deviceId\n        }, device.label);\n      })), __jsx(\"div\", {\n        ref: \"progressbar\",\n        style: {\n          width: this.state.audioLevel + 'px',\n          height: '10px',\n          backgroundColor: '#8dc63f',\n          marginTop: '20px'\n        }\n      }))), __jsx(\"div\", {\n        className: \"settings-item\"\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\"\n      }, \"Camera\"), __jsx(\"div\", {\n        className: \"settings-item-right\"\n      }, __jsx(Select, {\n        value: this.state.selectedVideoDevice,\n        style: {\n          width: 350\n        },\n        onChange: this.handleVideoDeviceChange\n      }, this.state.videoDevices.map(function (device, index) {\n        return __jsx(Option, {\n          value: device.deviceId,\n          key: device.deviceId\n        }, device.label);\n      })), __jsx(\"div\", {\n        className: \"settings-video-container\"\n      }, __jsx(\"video\", {\n        id: \"previewVideo\",\n        ref: \"previewVideo\",\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        }\n      })))), __jsx(\"div\", {\n        className: \"settings-item\"\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\"\n      }, \"Resolution\"), __jsx(\"div\", {\n        className: \"settings-item-right\"\n      }, __jsx(Select, {\n        style: {\n          width: 350\n        },\n        value: this.state.resolution,\n        onChange: this.handleResolutionChange\n      }, __jsx(Option, {\n        value: \"qqvga\"\n      }, \"QQVGA(160x90)\"), __jsx(Option, {\n        value: \"qvga\"\n      }, \"QVGA(320x180)\"), __jsx(Option, {\n        value: \"vga\"\n      }, \"VGA(640x360)\"), __jsx(Option, {\n        value: \"shd\"\n      }, \"SHD(960x540)\"), __jsx(Option, {\n        value: \"hd\"\n      }, \"HD(1280x720)\")))), !this.props.isLoggedIn && __jsx(\"div\", {\n        className: \"settings-item\"\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\"\n      }, \"Codec\"), __jsx(\"div\", {\n        className: \"settings-item-right\"\n      }, __jsx(Select, {\n        style: {\n          width: 350\n        },\n        value: this.state.codec,\n        onChange: this.handleVideoCodeChange\n      }, __jsx(Option, {\n        value: \"h264\"\n      }, \"H264\"), __jsx(Option, {\n        value: \"vp8\"\n      }, \"VP8\"), __jsx(Option, {\n        value: \"vp9\"\n      }, \"VP9\")))), __jsx(\"div\", {\n        className: \"settings-item\"\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\"\n      }, \"Bitrate\"), __jsx(\"div\", {\n        className: \"settings-item-right\"\n      }, __jsx(Select, {\n        style: {\n          width: 350\n        },\n        value: this.state.bandwidth,\n        onChange: this.handleBandWidthChange\n      }, __jsx(Option, {\n        value: \"100\"\n      }, \"Lowest(100kbps)\"), __jsx(Option, {\n        value: \"256\"\n      }, \"Low(256kbps)\"), __jsx(Option, {\n        value: \"512\"\n      }, \"Medium(512kbps)\"), __jsx(Option, {\n        value: \"1024\"\n      }, \"High(1Mbps)\"), __jsx(Option, {\n        value: \"4096\"\n      }, \"Lan(4Mbps)\")))), __jsx(\"div\", {\n        className: \"settings-item\"\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\"\n      }, \"Frame Rate\"), __jsx(\"div\", {\n        className: \"settings-item-right\"\n      }, __jsx(InputNumber, {\n        min: 1,\n        max: 30,\n        defaultValue: this.state.frameRate,\n        onChange: this.handleFrameRateChange\n      })))));\n    }\n  }]);\n\n  return MediaSettings;\n}(React.Component);\n\nexport { MediaSettings as default };","map":null,"metadata":{},"sourceType":"module"}