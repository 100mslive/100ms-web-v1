{"ast":null,"code":"import axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport uuid4 from 'uuid4';\nimport { envMapping } from '../../constants';\n\nfunction getJWT(payload, secret) {\n  const issuer = process.env.CUSTOMER_ID;\n  return jwt.sign(payload, secret, {\n    algorithm: 'HS256',\n    expiresIn: '24h',\n    issuer: issuer,\n    jwtid: uuid4()\n  });\n}\n\nfunction getManagementToken() {\n  const accessKey = process.env.MANAGEMENT_KEY;\n  const secret = process.env.MANAGEMENT_SECRET;\n  const payload = {\n    access_key: accessKey\n  };\n  return getJWT(payload, secret);\n}\n\nexport default (async (req, res) => {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', '*');\n  let payload;\n\n  try {\n    payload = JSON.parse(req.body);\n  } catch (error) {\n    res.status(400).json({\n      error\n    });\n    return;\n  }\n\n  let {\n    room_name,\n    recording_info,\n    env\n  } = payload;\n  env = env || 'prod-in';\n  let management_token = 'dummy';\n\n  if (env in envMapping) {\n    management_token = getManagementToken();\n  }\n\n  const options = {\n    method: 'post',\n    url: `https://${env}.100ms.live/api/v1/rooms`,\n    data: {\n      name: room_name,\n      description: 'nk room',\n      recording_info\n    },\n    headers: {\n      Authorization: `Bearer ${management_token}`,\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    var resp = await axios(options);\n\n    if (resp.status == 200) {\n      res.status(200).json(resp.data);\n    } else {\n      res.status(resp.status).json(resp);\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      error\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}