{"ast":null,"code":"var _jsxFileName = \"/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/App.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Layout, Button, Modal, notification, Spin } from 'antd';\nconst {\n  confirm\n} = Modal;\nconst {\n  Header,\n  Content,\n  Sider\n} = Layout;\nimport MediaSettings from './Settings';\nimport ChatFeed from './Chat';\nimport Message from './Chat/message';\nimport { AppContextProvider, AppContext } from '../stores/AppContext';\nimport LoginForm from './LoginForm';\nimport Conference from './Conference';\nimport { HMSClient, HMSPeer, HMSClientConfig } from '@100mslive/hmsvideo-web';\nimport { ENVS, ROLES } from '../constants';\nimport { dependencies } from '../../package.json';\nimport { getRequest } from '../utils';\nconst sdkVersion = dependencies['@100mslive/hmsvideo-web'].substring(1);\nconsole.info(`Using hmsvideo-web SDK version ${sdkVersion}`);\n\nasync function getToken({\n  room_id,\n  user_name,\n  role = 'guest',\n  env\n}) {\n  const endpoint = process.env.NEXT_PUBLIC_TOKEN_ENDPOINT || '/api/token';\n  const {\n    token\n  } = await fetch(endpoint, {\n    method: 'POST',\n    body: JSON.stringify({\n      room_id,\n      user_name,\n      env,\n      role\n    })\n  }).then(response => response.json()).catch(err => console.log('Error client token: ', err));\n  return token;\n}\n\nclass OldAppUI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_cleanUp\", async (shouldRedirectToHome = true) => {\n      if (shouldRedirectToHome) {\n        window.history.pushState({}, '100ms', `${window.location.protocol}//${window.location.host}`);\n        this.conference && (await this.conference.cleanUp());\n        this.props.client && (await this.props.client.disconnect());\n        this.props.setClient(null);\n        this.props.setRoomState({\n          isConnected: false,\n          login: false\n        });\n      } else {\n        window.location.reload();\n      }\n    });\n\n    _defineProperty(this, \"_notification\", (message, description) => {\n      notification.info({\n        message: message,\n        description: description,\n        placement: 'bottomRight'\n      });\n    });\n\n    _defineProperty(this, \"_createClient\", async ({\n      userName,\n      env,\n      roomId,\n      role\n    }) => {\n      let url = `wss://${env}.100ms.live`;\n      let authToken = await getToken({\n        env,\n        room_id: roomId,\n        user_name: userName,\n        role\n      });\n      console.log(`%cTOKEN IS: ${authToken}`, 'color: orange');\n      console.log('Websocket URL', url);\n\n      try {\n        let peer = new HMSPeer(userName, authToken);\n        let config = new HMSClientConfig({\n          endpoint: url\n        });\n        return new HMSClient(peer, config);\n      } catch (err) {\n        console.error('ERROR: ', err);\n        alert('Invalid token');\n      }\n    });\n\n    _defineProperty(this, \"_handleJoin\", async () => {\n      this.props.setRoomState({\n        loading: true\n      });\n\n      this.hideMessage = () => {}; //TODO this should reflect in initialization as well\n\n\n      ![ROLES.LIVE_RECORD, ROLES.VIEWER].includes(this.role) && this._onMediaSettingsChanged(this.props.settings.selectedAudioDevice, this.props.settings.selectedVideoDevice, this.props.settings.resolution, this.props.settings.bandwidth, this.props.settings.codec, this.props.settings.frameRate, this.props.settings.isDevMode);\n      let client = await this._createClient({\n        userName: this.props.loginInfo.displayName,\n        env: this.props.loginInfo.env,\n        roomId: this.props.loginInfo.roomId,\n        role: this.props.loginInfo.role\n      });\n      client.connect().catch(error => {\n        alert(error.message);\n      });\n\n      window.onunload = async () => {\n        await this._cleanUp();\n      };\n\n      client.on('peer-join', (room, peer) => {\n        this._notification('Peer Join', `peer => ${peer.name} joined ${room}!`);\n      });\n      client.on('peer-leave', (room, peer) => {\n        this._notification('Peer Leave', `peer => ${peer.name} left ${room}!`);\n      });\n      client.on('connect', () => {\n        console.log('on connect called');\n        if (this.props.roomState.isConnected) return;\n        console.log('connected!');\n\n        this._handleTransportOpen();\n      });\n      client.on('disconnect', () => {\n        console.log('disconnected!');\n        this.props.setRoomState({\n          loading: false\n        });\n      });\n      client.on('stream-add', (room, peer, streamInfo) => {\n        console.log('stream-add', JSON.stringify({\n          room,\n          peer,\n          streamInfo\n        }, null, 2));\n      });\n      client.on('stream-remove', (room, peer, streamInfo) => {\n        console.log('stream-remove', JSON.stringify({\n          room,\n          peer,\n          streamInfo\n        }, null, 2));\n      });\n      client.on('broadcast', (room, peer, message) => {\n        console.log('broadcast: ', room, peer.name, message);\n\n        this._onMessageReceived(peer.name, message);\n      });\n      client.on('disconnected', async () => {\n        console.log(`%c[APP] TEARING DOWN`, 'color:#fc0');\n        location.reload();\n      });\n      this.props.setClient(client);\n    });\n\n    _defineProperty(this, \"_handleTransportOpen\", async () => {\n      this.props.setRoomState({\n        isConnected: true\n      });\n\n      try {\n        await this.props.client.join(this.props.loginInfo.roomId).catch(error => {\n          console.log('JOIN ERROR:', error);\n        });\n        let redirectURL = `${window.location.protocol}//${window.location.host}/?room=${this.props.loginInfo.roomId}&env=${this.props.loginInfo.env}&role=${this.props.loginInfo.role}`;\n        window.history.pushState({}, '100ms', redirectURL);\n        this.props.setRoomState({\n          login: true,\n          loading: false\n        });\n\n        this._notification('Connected!', `Welcome to the ${this.props.loginInfo.roomName || '100ms'} room => ${this.props.loginInfo.roomId}`); // Local video & audio are disabled for the 'live-record'\n        // and 'viewer' roles. Their local stream is also not published.\n\n\n        if (![ROLES.LIVE_RECORD, ROLES.VIEWER].includes(this.props.loginInfo.role)) {\n          await this.conference.handleLocalStream();\n        }\n      } catch (error) {\n        console.error('HANDLE THIS ERROR: ', error);\n      }\n    });\n\n    _defineProperty(this, \"_handleLeave\", async () => {\n      let this2 = this;\n      confirm({\n        title: 'Leave Now?',\n        content: 'Do you want to leave the room?',\n\n        async onOk() {\n          await this2._cleanUp();\n          this2.props.setRoomState({\n            login: false\n          });\n        },\n\n        onCancel() {\n          console.log('Cancel');\n        }\n\n      });\n    });\n\n    _defineProperty(this, \"_handleAudioTrackEnabled\", enabled => {\n      this.props.setRoomState({\n        localAudioEnabled: enabled\n      });\n      this.conference.muteMediaTrack('audio', enabled);\n    });\n\n    _defineProperty(this, \"_handleVideoTrackEnabled\", enabled => {\n      this.props.setRoomState({\n        localVideoEnabled: enabled\n      });\n      this.conference.muteMediaTrack('video', enabled);\n    });\n\n    _defineProperty(this, \"_handleScreenSharing\", enabled => {\n      this.props.setRoomState({\n        screenSharingEnabled: enabled\n      });\n      this.conference.handleScreenSharing(enabled);\n    });\n\n    _defineProperty(this, \"_onRef\", ref => {\n      this.conference = ref;\n    });\n\n    _defineProperty(this, \"_openOrCloseLeftContainer\", collapsed => {\n      this.props.setRoomState({\n        collapsed: collapsed,\n        hasUnreadMessages: false\n      });\n    });\n\n    _defineProperty(this, \"_onMediaSettingsChanged\", (selectedAudioDevice, selectedVideoDevice, resolution, bandwidth, codec, frameRate, isDevMode, reloadPage = false) => {\n      this.props.setSettings({\n        selectedAudioDevice,\n        selectedVideoDevice,\n        resolution,\n        bandwidth,\n        codec,\n        frameRate,\n        isDevMode\n      });\n      const constraints = {\n        frameRate: frameRate,\n        bitrate: bandwidth,\n        resolution: resolution,\n        advancedMediaConstraints: {\n          audio: {\n            deviceId: selectedAudioDevice\n          },\n          video: {\n            deviceId: selectedVideoDevice\n          }\n        }\n      };\n\n      if (reloadPage) {\n        this.props.client && this.props.client.applyConstraints(constraints, this.props.client.local);\n      }\n    });\n\n    _defineProperty(this, \"_onMessageReceived\", (from, message) => {\n      console.log('Received message:' + from + ':' + message);\n      let messages = this.props.roomState.messages;\n      let uid = 1;\n      messages.push(new Message({\n        id: uid,\n        message: message,\n        senderName: from\n      }));\n      let hasUnreadMessages = false;\n\n      if (this.props.roomState.collapsed) {\n        hasUnreadMessages = true;\n      }\n\n      this.props.setRoomState({\n        messages,\n        hasUnreadMessages\n      });\n    });\n\n    _defineProperty(this, \"_onSendMessage\", data => {\n      console.log('Send message:' + data);\n      var info = {\n        senderName: this.props.loginInfo.displayName,\n        msg: data\n      };\n      this.props.client.broadcast(info, this.props.client.rid);\n      let messages = this.props.roomState.messages;\n      let uid = 0;\n      messages.push(new Message({\n        id: uid,\n        message: data,\n        senderName: 'me'\n      }));\n      this.props.setRoomState({\n        messages\n      });\n    });\n\n    props.setClient(null);\n    props.setRoomState({\n      isConnected: false\n    });\n\n    if (!props.settings.codec) {\n      props.setSettings({\n        selectedAudioDevice: '',\n        selectedVideoDevice: '',\n        resolution: 'qvga',\n        bandwidth: 256,\n        codec: 'vp8',\n        frameRate: 20,\n        isDevMode: true\n      });\n    }\n  }\n\n  isValidParams() {\n    const validRoomPattern = /^[a-zA-Z0-9-.:_]*$/g;\n    const validRoles = Object.values(ROLES);\n    const validEnvs = Object.values(ENVS);\n\n    try {\n      const params = getRequest();\n\n      if (params.role && !validRoles.includes(params.role.toLowerCase())) {\n        return [false, 'Role'];\n      } else if (params.env && !validEnvs.includes(params.env.toLowerCase())) {\n        return [false, 'environment'];\n      } else if (params.room && !validRoomPattern.test(params.room)) {\n        return [false, 'Room ID'];\n      } else {\n        return [true, null];\n      }\n    } catch (error) {\n      if (error instanceof URIError) {\n        return [false, 'URL'];\n      }\n    }\n  }\n\n  render() {\n    const {\n      login,\n      loading,\n      localAudioEnabled,\n      localVideoEnabled,\n      screenSharingEnabled,\n      collapsed,\n      vidFit\n    } = this.props.roomState;\n    const isValidParams = this.isValidParams()[0];\n    return __jsx(Layout, {\n      className: \"app-layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 7\n      }\n    }, __jsx(Header, {\n      className: \"app-header\",\n      style: {\n        backgroundColor: '#1a1619',\n        zIndex: '10',\n        padding: '0 0',\n        margin: '0 auto',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"app-header-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      href: \"https://100ms.live/\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: \"/100ms-logo-on-black.png\",\n      className: \"h-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      className: \"app-header-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }\n    }, __jsx(MediaSettings, {\n      onMediaSettingsChanged: this._onMediaSettingsChanged,\n      settings: this.props.settings,\n      isLoggedIn: login,\n      setLocalStreamError: this.props.setLocalStreamError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }))), __jsx(Content, {\n      className: \"app-center-layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }\n    }, !isValidParams ? __jsx(\"div\", {\n      className: \"min-h-screen flex items-center justify-center w-full py-8 px-4 sm:px-6 lg:px-8\",\n      style: {\n        backgroundColor: '#1a1619'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"overflow-hidden shadow rounded-lg max-w-sm w-full px-4 py-5 p-6 bg-gray-100 my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"mt-2 text-center text-3xl leading-9 font-extrabold text-gray-900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    }, \"100ms Conference\"), __jsx(\"p\", {\n      className: \"mt-2 text-center text-sm leading-5 text-gray-600 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 19\n      }\n    }, \"The requested \", this.isValidParams()[1], \" is invalid. Please verify your credentials.\"), __jsx(\"button\", {\n      className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none transition duration-150 ease-in-out\",\n      onClick: () => {\n        this._cleanUp();\n\n        location.reload();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    }, \"Back to Home\")))) : login ? __jsx(Layout, {\n      className: \"app-content-layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 13\n      }\n    }, __jsx(Sider, {\n      width: 320,\n      collapsedWidth: 0,\n      trigger: null,\n      collapsible: true,\n      collapsed: collapsed,\n      style: {\n        backgroundColor: '#1a1619'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"left-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, __jsx(ChatFeed, {\n      messages: this.props.roomState.messages,\n      onSendMessage: this._onSendMessage,\n      onClose: () => this._openOrCloseLeftContainer(!collapsed),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 19\n      }\n    }))), __jsx(Layout, {\n      className: \"app-right-layout\",\n      style: {\n        height: 'calc(100vh - 64px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 15\n      }\n    }, __jsx(Content, {\n      style: {\n        flex: 1,\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 19\n      }\n    }, __jsx(AppContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }\n    }, context => __jsx(Conference, {\n      roomName: this.props.loginInfo.roomName,\n      roomId: this.props.loginInfo.roomId,\n      collapsed: this.props.roomState.collapsed,\n      client: context.client,\n      settings: context.settings,\n      localAudioEnabled: localAudioEnabled,\n      localVideoEnabled: localVideoEnabled,\n      vidFit: vidFit,\n      loginInfo: this.props.loginInfo,\n      ref: ref => {\n        this.conference = ref;\n      },\n      onScreenToggle: () => this._handleScreenSharing(!screenSharingEnabled),\n      onLeave: this._handleLeave,\n      onChatToggle: () => {\n        this._openOrCloseLeftContainer(!collapsed);\n      },\n      isChatOpen: !this.props.roomState.collapsed,\n      cleanUp: this._cleanUp,\n      role: this.props.loginInfo.role,\n      hasUnreadMessages: this.props.roomState.hasUnreadMessages,\n      setLocalStreamError: this.props.setLocalStreamError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 25\n      }\n    })))))) : loading ? __jsx(\"div\", {\n      className: \"flex items-center justify-center\",\n      style: {\n        height: 'calc(100vh - 64px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 13\n      }\n    }, __jsx(Spin, {\n      size: \"large\",\n      tip: \"Connecting...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 15\n      }\n    })) : __jsx(\"div\", {\n      className: \"relative w-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 13\n      }\n    }, __jsx(AppContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 15\n      }\n    }, context => __jsx(LoginForm, {\n      settings: context.settings,\n      loginInfo: context.loginInfo,\n      setSettings: context.setSettings,\n      setLoginInfo: context.setLoginInfo,\n      handleLogin: this._handleJoin,\n      createClient: this._createClient,\n      client: context.client,\n      setClient: context.setClient,\n      roomState: context.roomState,\n      setRoomState: context.setRoomState,\n      setLocalStreamError: this.props.setLocalStreamError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 19\n      }\n    }))), this.props.localStreamError && __jsx(Modal, {\n      visible: !!this.props.localStreamError,\n      title: this.props.localStreamError.title,\n      footer: [__jsx(Button, {\n        key: \"submit\",\n        type: \"primary\",\n        onClick: () => {\n          this._cleanUp(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 17\n        }\n      }, \"Try Again\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 15\n      }\n    }, this.props.localStreamError.message))));\n  }\n\n}\n\nclass OldApp extends React.Component {\n  render() {\n    return __jsx(AppContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 7\n      }\n    }, context => __jsx(OldAppUI, {\n      settings: context.settings,\n      roomState: context.roomState,\n      loginInfo: context.loginInfo,\n      setSettings: context.setSettings,\n      setLoginInfo: context.setLoginInfo,\n      setRoomState: context.setRoomState,\n      setClient: context.setClient,\n      client: context.client,\n      localStreamError: context.localStreamError,\n      setLocalStreamError: context.setLocalStreamError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nclass App extends React.Component {\n  render() {\n    return __jsx(AppContextProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 7\n      }\n    }, __jsx(OldApp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/App.jsx"],"names":["React","Layout","Button","Modal","notification","Spin","confirm","Header","Content","Sider","MediaSettings","ChatFeed","Message","AppContextProvider","AppContext","LoginForm","Conference","HMSClient","HMSPeer","HMSClientConfig","ENVS","ROLES","dependencies","getRequest","sdkVersion","substring","console","info","getToken","room_id","user_name","role","env","endpoint","process","NEXT_PUBLIC_TOKEN_ENDPOINT","token","fetch","method","body","JSON","stringify","then","response","json","catch","err","log","OldAppUI","Component","constructor","props","shouldRedirectToHome","window","history","pushState","location","protocol","host","conference","cleanUp","client","disconnect","setClient","setRoomState","isConnected","login","reload","message","description","placement","userName","roomId","url","authToken","peer","config","error","alert","loading","hideMessage","LIVE_RECORD","VIEWER","includes","_onMediaSettingsChanged","settings","selectedAudioDevice","selectedVideoDevice","resolution","bandwidth","codec","frameRate","isDevMode","_createClient","loginInfo","displayName","connect","onunload","_cleanUp","on","room","_notification","name","roomState","_handleTransportOpen","streamInfo","_onMessageReceived","join","redirectURL","roomName","handleLocalStream","this2","title","content","onOk","onCancel","enabled","localAudioEnabled","muteMediaTrack","localVideoEnabled","screenSharingEnabled","handleScreenSharing","ref","collapsed","hasUnreadMessages","reloadPage","setSettings","constraints","bitrate","advancedMediaConstraints","audio","deviceId","video","applyConstraints","local","from","messages","uid","push","id","senderName","data","msg","broadcast","rid","isValidParams","validRoomPattern","validRoles","Object","values","validEnvs","params","toLowerCase","test","URIError","render","vidFit","backgroundColor","zIndex","padding","margin","width","setLocalStreamError","_onSendMessage","_openOrCloseLeftContainer","height","flex","position","context","_handleScreenSharing","_handleLeave","setLoginInfo","_handleJoin","localStreamError","OldApp","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout, Button, Modal, notification, Spin } from 'antd';\nconst { confirm } = Modal;\nconst { Header, Content, Sider } = Layout;\nimport MediaSettings from './Settings';\nimport ChatFeed from './Chat';\nimport Message from './Chat/message';\nimport { AppContextProvider, AppContext } from '../stores/AppContext';\n\nimport LoginForm from './LoginForm';\nimport Conference from './Conference';\nimport { HMSClient, HMSPeer, HMSClientConfig } from '@100mslive/hmsvideo-web';\nimport { ENVS, ROLES } from '../constants';\nimport { dependencies } from '../../package.json';\nimport { getRequest } from '../utils';\n\nconst sdkVersion = dependencies['@100mslive/hmsvideo-web'].substring(1);\nconsole.info(`Using hmsvideo-web SDK version ${sdkVersion}`);\n\nasync function getToken({ room_id, user_name, role = 'guest', env }) {\n  const endpoint = process.env.NEXT_PUBLIC_TOKEN_ENDPOINT || '/api/token';\n  const { token } = await fetch(endpoint, {\n    method: 'POST',\n    body: JSON.stringify({ room_id, user_name, env, role }),\n  })\n    .then(response => response.json())\n    .catch(err => console.log('Error client token: ', err));\n  return token;\n}\n\nclass OldAppUI extends React.Component {\n  constructor(props) {\n    super(props);\n    props.setClient(null);\n    props.setRoomState({\n      isConnected: false,\n    });\n    if (!props.settings.codec) {\n      props.setSettings({\n        selectedAudioDevice: '',\n        selectedVideoDevice: '',\n        resolution: 'qvga',\n        bandwidth: 256,\n        codec: 'vp8',\n        frameRate: 20,\n        isDevMode: true,\n      });\n    }\n  }\n\n  _cleanUp = async (shouldRedirectToHome = true) => {\n    if (shouldRedirectToHome) {\n      window.history.pushState(\n        {},\n        '100ms',\n        `${window.location.protocol}//${window.location.host}`\n      );\n\n      this.conference && (await this.conference.cleanUp());\n      this.props.client && (await this.props.client.disconnect());\n      this.props.setClient(null);\n      this.props.setRoomState({\n        isConnected: false,\n        login: false,\n      });\n    } else {\n      window.location.reload();\n    }\n  };\n\n  _notification = (message, description) => {\n    notification.info({\n      message: message,\n      description: description,\n      placement: 'bottomRight',\n    });\n  };\n\n  _createClient = async ({ userName, env, roomId, role }) => {\n    let url = `wss://${env}.100ms.live`;\n    let authToken = await getToken({\n      env,\n      room_id: roomId,\n      user_name: userName,\n      role,\n    });\n\n    console.log(`%cTOKEN IS: ${authToken}`, 'color: orange');\n    console.log('Websocket URL', url);\n\n    try {\n      let peer = new HMSPeer(userName, authToken);\n\n      let config = new HMSClientConfig({\n        endpoint: url,\n      });\n\n      return new HMSClient(peer, config);\n    } catch (err) {\n      console.error('ERROR: ', err);\n      alert('Invalid token');\n    }\n  };\n\n  _handleJoin = async () => {\n    this.props.setRoomState({\n      loading: true,\n    });\n    this.hideMessage = () => {};\n    //TODO this should reflect in initialization as well\n\n    ![ROLES.LIVE_RECORD, ROLES.VIEWER].includes(this.role) &&\n      this._onMediaSettingsChanged(\n        this.props.settings.selectedAudioDevice,\n        this.props.settings.selectedVideoDevice,\n        this.props.settings.resolution,\n        this.props.settings.bandwidth,\n        this.props.settings.codec,\n        this.props.settings.frameRate,\n        this.props.settings.isDevMode\n      );\n\n    let client = await this._createClient({\n      userName: this.props.loginInfo.displayName,\n      env: this.props.loginInfo.env,\n      roomId: this.props.loginInfo.roomId,\n      role: this.props.loginInfo.role,\n    });\n    client.connect().catch(error => {\n      alert(error.message);\n    });\n\n    window.onunload = async () => {\n      await this._cleanUp();\n    };\n\n    client.on('peer-join', (room, peer) => {\n      this._notification('Peer Join', `peer => ${peer.name} joined ${room}!`);\n    });\n\n    client.on('peer-leave', (room, peer) => {\n      this._notification('Peer Leave', `peer => ${peer.name} left ${room}!`);\n    });\n\n    client.on('connect', () => {\n      console.log('on connect called');\n      if (this.props.roomState.isConnected) return;\n      console.log('connected!');\n      this._handleTransportOpen();\n    });\n\n    client.on('disconnect', () => {\n      console.log('disconnected!');\n      this.props.setRoomState({\n        loading: false,\n      });\n    });\n\n    client.on('stream-add', (room, peer, streamInfo) => {\n      console.log(\n        'stream-add',\n        JSON.stringify({ room, peer, streamInfo }, null, 2)\n      );\n    });\n\n    client.on('stream-remove', (room, peer, streamInfo) => {\n      console.log(\n        'stream-remove',\n        JSON.stringify({ room, peer, streamInfo }, null, 2)\n      );\n    });\n\n    client.on('broadcast', (room, peer, message) => {\n      console.log('broadcast: ', room, peer.name, message);\n      this._onMessageReceived(peer.name, message);\n    });\n\n    client.on('disconnected', async () => {\n      console.log(`%c[APP] TEARING DOWN`, 'color:#fc0');\n      location.reload();\n    });\n\n    this.props.setClient(client);\n  };\n\n  _handleTransportOpen = async () => {\n    this.props.setRoomState({\n      isConnected: true,\n    });\n    try {\n      await this.props.client.join(this.props.loginInfo.roomId).catch(error => {\n        console.log('JOIN ERROR:', error);\n      });\n      let redirectURL = `${window.location.protocol}//${window.location.host}/?room=${this.props.loginInfo.roomId}&env=${this.props.loginInfo.env}&role=${this.props.loginInfo.role}`;\n\n      window.history.pushState({}, '100ms', redirectURL);\n\n      this.props.setRoomState({\n        login: true,\n        loading: false,\n      });\n\n      this._notification(\n        'Connected!',\n        `Welcome to the ${this.props.loginInfo.roomName || '100ms'} room => ${\n          this.props.loginInfo.roomId\n        }`\n      );\n\n      // Local video & audio are disabled for the 'live-record'\n      // and 'viewer' roles. Their local stream is also not published.\n      if (\n        ![ROLES.LIVE_RECORD, ROLES.VIEWER].includes(this.props.loginInfo.role)\n      ) {\n        await this.conference.handleLocalStream();\n      }\n    } catch (error) {\n      console.error('HANDLE THIS ERROR: ', error);\n    }\n  };\n\n  _handleLeave = async () => {\n    let this2 = this;\n    confirm({\n      title: 'Leave Now?',\n      content: 'Do you want to leave the room?',\n      async onOk() {\n        await this2._cleanUp();\n        this2.props.setRoomState({ login: false });\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    });\n  };\n\n  _handleAudioTrackEnabled = enabled => {\n    this.props.setRoomState({\n      localAudioEnabled: enabled,\n    });\n    this.conference.muteMediaTrack('audio', enabled);\n  };\n\n  _handleVideoTrackEnabled = enabled => {\n    this.props.setRoomState({\n      localVideoEnabled: enabled,\n    });\n    this.conference.muteMediaTrack('video', enabled);\n  };\n\n  _handleScreenSharing = enabled => {\n    this.props.setRoomState({\n      screenSharingEnabled: enabled,\n    });\n    this.conference.handleScreenSharing(enabled);\n  };\n\n  _onRef = ref => {\n    this.conference = ref;\n  };\n\n  _openOrCloseLeftContainer = collapsed => {\n    this.props.setRoomState({\n      collapsed: collapsed,\n      hasUnreadMessages: false,\n    });\n  };\n\n  _onMediaSettingsChanged = (\n    selectedAudioDevice,\n    selectedVideoDevice,\n    resolution,\n    bandwidth,\n    codec,\n    frameRate,\n    isDevMode,\n    reloadPage = false\n  ) => {\n    this.props.setSettings({\n      selectedAudioDevice,\n      selectedVideoDevice,\n      resolution,\n      bandwidth,\n      codec,\n      frameRate,\n      isDevMode,\n    });\n    const constraints = {\n      frameRate: frameRate,\n      bitrate: bandwidth,\n      resolution: resolution,\n      advancedMediaConstraints: {\n        audio: {\n          deviceId: selectedAudioDevice,\n        },\n        video: {\n          deviceId: selectedVideoDevice,\n        },\n      },\n    };\n    if (reloadPage) {\n      this.props.client &&\n        this.props.client.applyConstraints(\n          constraints,\n          this.props.client.local\n        );\n    }\n  };\n\n  _onMessageReceived = (from, message) => {\n    console.log('Received message:' + from + ':' + message);\n    let messages = this.props.roomState.messages;\n    let uid = 1;\n    messages.push(new Message({ id: uid, message: message, senderName: from }));\n    let hasUnreadMessages = false;\n    if (this.props.roomState.collapsed) {\n      hasUnreadMessages = true;\n    }\n    this.props.setRoomState({ messages, hasUnreadMessages });\n  };\n\n  _onSendMessage = data => {\n    console.log('Send message:' + data);\n    var info = {\n      senderName: this.props.loginInfo.displayName,\n      msg: data,\n    };\n    this.props.client.broadcast(info, this.props.client.rid);\n    let messages = this.props.roomState.messages;\n    let uid = 0;\n    messages.push(new Message({ id: uid, message: data, senderName: 'me' }));\n    this.props.setRoomState({ messages });\n  };\n\n  isValidParams() {\n    const validRoomPattern = /^[a-zA-Z0-9-.:_]*$/g;\n    const validRoles = Object.values(ROLES);\n    const validEnvs = Object.values(ENVS);\n    try {\n      const params = getRequest();\n\n      if (params.role && !validRoles.includes(params.role.toLowerCase())) {\n        return [false, 'Role'];\n      } else if (params.env && !validEnvs.includes(params.env.toLowerCase())) {\n        return [false, 'environment'];\n      } else if (params.room && !validRoomPattern.test(params.room)) {\n        return [false, 'Room ID'];\n      } else {\n        return [true, null];\n      }\n    } catch (error) {\n      if (error instanceof URIError) {\n        return [false, 'URL'];\n      }\n    }\n  }\n\n  render() {\n    const {\n      login,\n      loading,\n      localAudioEnabled,\n      localVideoEnabled,\n      screenSharingEnabled,\n      collapsed,\n      vidFit,\n    } = this.props.roomState;\n\n    const isValidParams = this.isValidParams()[0];\n\n    return (\n      <Layout className=\"app-layout\">\n        <Header\n          className=\"app-header\"\n          style={{\n            backgroundColor: '#1a1619',\n            zIndex: '10',\n            padding: '0 0',\n            margin: '0 auto',\n            width: '100%',\n          }}\n        >\n          <div className=\"app-header-left\">\n            <a href=\"https://100ms.live/\" target=\"_blank\">\n              <img src=\"/100ms-logo-on-black.png\" className=\"h-8\" />\n            </a>\n          </div>\n          <div className=\"app-header-right\">\n            <MediaSettings\n              onMediaSettingsChanged={this._onMediaSettingsChanged}\n              settings={this.props.settings}\n              isLoggedIn={login}\n              setLocalStreamError={this.props.setLocalStreamError}\n            />\n          </div>\n        </Header>\n\n        <Content className=\"app-center-layout\">\n          {!isValidParams ? (\n            <div\n              className=\"min-h-screen flex items-center justify-center w-full py-8 px-4 sm:px-6 lg:px-8\"\n              style={{ backgroundColor: '#1a1619' }}\n            >\n              <div className=\"overflow-hidden shadow rounded-lg max-w-sm w-full px-4 py-5 p-6 bg-gray-100 my-3\">\n                <div className=\"\">\n                  <h2 className=\"mt-2 text-center text-3xl leading-9 font-extrabold text-gray-900\">\n                    100ms Conference\n                  </h2>\n\n                  <p className=\"mt-2 text-center text-sm leading-5 text-gray-600 mb-2\">\n                    The requested {this.isValidParams()[1]} is invalid. Please\n                    verify your credentials.\n                  </p>\n\n                  <button\n                    className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none transition duration-150 ease-in-out\"\n                    onClick={() => {\n                      this._cleanUp();\n                      location.reload();\n                    }}\n                  >\n                    Back to Home\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : login ? (\n            <Layout className=\"app-content-layout\">\n              <Sider\n                width={320}\n                collapsedWidth={0}\n                trigger={null}\n                collapsible\n                collapsed={collapsed}\n                style={{ backgroundColor: '#1a1619' }}\n              >\n                <div className=\"left-container\">\n                  <ChatFeed\n                    messages={this.props.roomState.messages}\n                    onSendMessage={this._onSendMessage}\n                    onClose={() => this._openOrCloseLeftContainer(!collapsed)}\n                  />\n                </div>\n              </Sider>\n              <Layout\n                className=\"app-right-layout\"\n                style={{ height: 'calc(100vh - 64px)' }}\n              >\n                <Content style={{ flex: 1, position: 'relative' }}>\n                  <div>\n                    <AppContext.Consumer>\n                      {context => (\n                        <Conference\n                          roomName={this.props.loginInfo.roomName}\n                          roomId={this.props.loginInfo.roomId}\n                          collapsed={this.props.roomState.collapsed}\n                          client={context.client}\n                          settings={context.settings}\n                          localAudioEnabled={localAudioEnabled}\n                          localVideoEnabled={localVideoEnabled}\n                          vidFit={vidFit}\n                          loginInfo={this.props.loginInfo}\n                          ref={ref => {\n                            this.conference = ref;\n                          }}\n                          onScreenToggle={() =>\n                            this._handleScreenSharing(!screenSharingEnabled)\n                          }\n                          onLeave={this._handleLeave}\n                          onChatToggle={() => {\n                            this._openOrCloseLeftContainer(!collapsed);\n                          }}\n                          isChatOpen={!this.props.roomState.collapsed}\n                          cleanUp={this._cleanUp}\n                          role={this.props.loginInfo.role}\n                          hasUnreadMessages={\n                            this.props.roomState.hasUnreadMessages\n                          }\n                          setLocalStreamError={this.props.setLocalStreamError}\n                        />\n                      )}\n                    </AppContext.Consumer>\n                  </div>\n                </Content>\n              </Layout>\n            </Layout>\n          ) : loading ? (\n            <div\n              className=\"flex items-center justify-center\"\n              style={{ height: 'calc(100vh - 64px)' }}\n            >\n              <Spin size=\"large\" tip=\"Connecting...\" />\n            </div>\n          ) : (\n            <div className=\"relative w-full\">\n              <AppContext.Consumer>\n                {context => (\n                  <LoginForm\n                    settings={context.settings}\n                    loginInfo={context.loginInfo}\n                    setSettings={context.setSettings}\n                    setLoginInfo={context.setLoginInfo}\n                    handleLogin={this._handleJoin}\n                    createClient={this._createClient}\n                    client={context.client}\n                    setClient={context.setClient}\n                    roomState={context.roomState}\n                    setRoomState={context.setRoomState}\n                    setLocalStreamError={this.props.setLocalStreamError}\n                  />\n                )}\n              </AppContext.Consumer>\n            </div>\n          )}\n          {this.props.localStreamError && (\n            <Modal\n              visible={!!this.props.localStreamError}\n              title={this.props.localStreamError.title}\n              footer={[\n                <Button\n                  key=\"submit\"\n                  type=\"primary\"\n                  onClick={() => {\n                    this._cleanUp(false);\n                  }}\n                >\n                  Try Again\n                </Button>,\n              ]}\n            >\n              <p>{this.props.localStreamError.message}</p>\n            </Modal>\n          )}\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nclass OldApp extends React.Component {\n  render() {\n    return (\n      <AppContext.Consumer>\n        {context => (\n          <OldAppUI\n            settings={context.settings}\n            roomState={context.roomState}\n            loginInfo={context.loginInfo}\n            setSettings={context.setSettings}\n            setLoginInfo={context.setLoginInfo}\n            setRoomState={context.setRoomState}\n            setClient={context.setClient}\n            client={context.client}\n            localStreamError={context.localStreamError}\n            setLocalStreamError={context.setLocalStreamError}\n          />\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <AppContextProvider>\n        <OldApp />\n      </AppContextProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}