{"ast":null,"code":"var _jsxFileName = \"/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Settings/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, InputNumber, Modal, Select, Tooltip } from 'antd';\nimport PropTypes from 'prop-types';\nimport { attachMediaStream, closeMediaStream, updateInputDevices } from '../../utils';\nimport SoundMeter from './soundmeter';\nconst Option = Select.Option;\nexport default class MediaSettings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setDeviceState\", () => {\n      updateInputDevices().then(data => {\n        if (this.state.selectedAudioDevice === '' && data.audioDevices.length > 0) {\n          this.setState({\n            selectedAudioDevice: data.audioDevices[0].deviceId\n          });\n        }\n\n        if (this.state.selectedVideoDevice === '' && data.videoDevices.length > 0) {\n          this.setState({\n            selectedVideoDevice: data.videoDevices[0].deviceId\n          });\n        }\n\n        this.setState({\n          videoDevices: data.videoDevices,\n          audioDevices: data.audioDevices,\n          audioOutputDevices: data.audioOutputDevices\n        });\n        this.state.audioDevices.map((device, index) => {\n          if (this.state.selectedAudioDevice == device.deviceId) {\n            console.log('Selected audioDevice::' + JSON.stringify(device));\n          }\n        });\n        this.state.videoDevices.map((device, index) => {\n          if (this.state.selectedVideoDevice == device.deviceId) {\n            console.log('Selected videoDevice::' + JSON.stringify(device));\n          }\n        });\n      });\n    });\n\n    _defineProperty(this, \"soundMeterProcess\", () => {\n      var val = window.soundMeter.instant.toFixed(2) * 348 + 1;\n      this.setState({\n        audioLevel: val\n      });\n      if (this.state.visible) setTimeout(this.soundMeterProcess, 100);\n    });\n\n    _defineProperty(this, \"startPreview\", () => {\n      if (window.stream) {\n        closeMediaStream(window.stream);\n      }\n\n      let videoElement = this.refs['previewVideo'];\n      let audioSource = this.state.selectedAudioDevice;\n      let videoSource = this.state.selectedVideoDevice;\n      this.soundMeter = window.soundMeter = new SoundMeter(window.audioContext);\n      let soundMeterProcess = this.soundMeterProcess;\n      let constraints = {\n        audio: {\n          deviceId: audioSource ? {\n            exact: audioSource\n          } : undefined\n        },\n        video: {\n          deviceId: videoSource ? {\n            exact: videoSource\n          } : undefined\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n        window.stream = stream; // make stream available to console\n        //videoElement.srcObject = stream;\n\n        attachMediaStream(videoElement, stream);\n        soundMeter.connectToSource(stream);\n        setTimeout(soundMeterProcess, 100);\n        this.setDeviceState();\n      }).catch(error => {\n        this.props.setLocalStreamError(error);\n      });\n    });\n\n    _defineProperty(this, \"stopPreview\", () => {\n      if (window.stream) {\n        closeMediaStream(window.stream);\n      }\n    });\n\n    _defineProperty(this, \"showModal\", () => {\n      this.setState({\n        visible: true\n      });\n      setTimeout(this.startPreview, 100);\n    });\n\n    _defineProperty(this, \"handleOk\", e => {\n      this.setState({\n        visible: false\n      });\n      this.stopPreview();\n\n      if (this.props.onMediaSettingsChanged !== undefined) {\n        this.props.onMediaSettingsChanged(this.state.selectedAudioDevice, this.state.selectedVideoDevice, this.state.resolution, this.state.bandwidth, this.state.codec, this.state.frameRate, this.state.isDevMode, true);\n      }\n    });\n\n    _defineProperty(this, \"handleCancel\", e => {\n      let settings = this.props.settings;\n      this.setState(_objectSpread(_objectSpread({}, settings), {}, {\n        visible: false\n      }));\n      this.stopPreview();\n    });\n\n    _defineProperty(this, \"handleAudioDeviceChange\", e => {\n      this.setState({\n        selectedAudioDevice: e\n      });\n      setTimeout(this.startPreview, 100);\n    });\n\n    _defineProperty(this, \"handleVideoDeviceChange\", e => {\n      this.setState({\n        selectedVideoDevice: e\n      });\n      setTimeout(this.startPreview, 100);\n    });\n\n    _defineProperty(this, \"handleResolutionChange\", e => {\n      this.setState({\n        resolution: e\n      });\n    });\n\n    _defineProperty(this, \"handleVideoCodeChange\", e => {\n      this.setState({\n        codec: e\n      });\n    });\n\n    _defineProperty(this, \"handleBandWidthChange\", e => {\n      this.setState({\n        bandwidth: e\n      });\n    });\n\n    _defineProperty(this, \"handleFrameRateChange\", e => {\n      this.setState({\n        frameRate: e\n      });\n    });\n\n    _defineProperty(this, \"handleDevChange\", checked => {\n      this.setState({\n        isDevMode: checked\n      });\n    });\n\n    let _settings = props.settings;\n    this.state = {\n      visible: false,\n      videoDevices: [],\n      audioDevices: [],\n      audioOutputDevices: [],\n      resolution: _settings.resolution,\n      bandwidth: _settings.bandwidth,\n      selectedAudioDevice: _settings.selectedAudioDevice,\n      selectedVideoDevice: _settings.selectedVideoDevice,\n      codec: _settings.codec,\n      isDevMode: _settings.isDevMode,\n      frameRate: _settings.frameRate\n    };\n\n    try {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      window.audioContext = new AudioContext();\n    } catch (e) {\n      console.log('Web Audio API not supported.');\n    }\n  }\n\n  componentDidMount() {\n    this.setDeviceState();\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }, __jsx(Tooltip, {\n      title: \"System setup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      shape: \"circle\",\n      icon: \"setting\",\n      ghost: true,\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    })), __jsx(Modal, {\n      title: \"Settings\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      okText: \"Ok\",\n      cancelText: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"settings-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: \"settings-item-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \"Micphone\"), __jsx(\"div\", {\n      className: \"settings-item-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      value: this.state.selectedAudioDevice,\n      style: {\n        width: 350\n      },\n      onChange: this.handleAudioDeviceChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, this.state.audioDevices.map((device, index) => {\n      return __jsx(Option, {\n        value: device.deviceId,\n        key: device.deviceId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, device.label);\n    })), __jsx(\"div\", {\n      ref: \"progressbar\",\n      style: {\n        width: this.state.audioLevel + 'px',\n        height: '10px',\n        backgroundColor: '#8dc63f',\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      className: \"settings-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: \"settings-item-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"Camera\"), __jsx(\"div\", {\n      className: \"settings-item-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      value: this.state.selectedVideoDevice,\n      style: {\n        width: 350\n      },\n      onChange: this.handleVideoDeviceChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, this.state.videoDevices.map((device, index) => {\n      return __jsx(Option, {\n        value: device.deviceId,\n        key: device.deviceId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, device.label);\n    })), __jsx(\"div\", {\n      className: \"settings-video-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, __jsx(\"video\", {\n      id: \"previewVideo\",\n      ref: \"previewVideo\",\n      autoPlay: true,\n      playsInline: true,\n      muted: true,\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    })))), __jsx(\"div\", {\n      className: \"settings-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: \"settings-item-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, \"Resolution\"), __jsx(\"div\", {\n      className: \"settings-item-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      style: {\n        width: 350\n      },\n      value: this.state.resolution,\n      onChange: this.handleResolutionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, __jsx(Option, {\n      value: \"qqvga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, \"QQVGA(160x90)\"), __jsx(Option, {\n      value: \"qvga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \"QVGA(320x180)\"), __jsx(Option, {\n      value: \"vga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, \"VGA(640x360)\"), __jsx(Option, {\n      value: \"shd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, \"SHD(960x540)\"), __jsx(Option, {\n      value: \"hd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \"HD(1280x720)\")))), !this.props.isLoggedIn && __jsx(\"div\", {\n      className: \"settings-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"settings-item-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, \"Codec\"), __jsx(\"div\", {\n      className: \"settings-item-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: 350\n      },\n      value: this.state.codec,\n      onChange: this.handleVideoCodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, __jsx(Option, {\n      value: \"h264\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 19\n      }\n    }, \"H264\"), __jsx(Option, {\n      value: \"vp8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, \"VP8\"), __jsx(Option, {\n      value: \"vp9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }, \"VP9\")))), __jsx(\"div\", {\n      className: \"settings-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: \"settings-item-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, \"Bitrate\"), __jsx(\"div\", {\n      className: \"settings-item-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      style: {\n        width: 350\n      },\n      value: this.state.bandwidth,\n      onChange: this.handleBandWidthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, __jsx(Option, {\n      value: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, \"Lowest(100kbps)\"), __jsx(Option, {\n      value: \"256\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, \"Low(256kbps)\"), __jsx(Option, {\n      value: \"512\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \"Medium(512kbps)\"), __jsx(Option, {\n      value: \"1024\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, \"High(1Mbps)\"), __jsx(Option, {\n      value: \"4096\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }, \"Lan(4Mbps)\")))), __jsx(\"div\", {\n      className: \"settings-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: \"settings-item-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, \"Frame Rate\"), __jsx(\"div\", {\n      className: \"settings-item-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, __jsx(InputNumber, {\n      min: 1,\n      max: 30,\n      defaultValue: this.state.frameRate,\n      onChange: this.handleFrameRateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\nMediaSettings.propTypes = {\n  onMediaSettingsChanged: PropTypes.func\n};","map":{"version":3,"sources":["/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Settings/index.js"],"names":["React","Button","InputNumber","Modal","Select","Tooltip","PropTypes","attachMediaStream","closeMediaStream","updateInputDevices","SoundMeter","Option","MediaSettings","Component","constructor","props","then","data","state","selectedAudioDevice","audioDevices","length","setState","deviceId","selectedVideoDevice","videoDevices","audioOutputDevices","map","device","index","console","log","JSON","stringify","val","window","soundMeter","instant","toFixed","audioLevel","visible","setTimeout","soundMeterProcess","stream","videoElement","refs","audioSource","videoSource","audioContext","constraints","audio","exact","undefined","video","navigator","mediaDevices","getUserMedia","connectToSource","setDeviceState","catch","error","setLocalStreamError","startPreview","e","stopPreview","onMediaSettingsChanged","resolution","bandwidth","codec","frameRate","isDevMode","settings","checked","AudioContext","webkitAudioContext","componentDidMount","componentWillUnmount","render","showModal","handleOk","handleCancel","width","handleAudioDeviceChange","label","height","backgroundColor","marginTop","handleVideoDeviceChange","objectFit","handleResolutionChange","isLoggedIn","handleVideoCodeChange","handleBandWidthChange","handleFrameRateChange","propTypes","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, InputNumber, Modal, Select, Tooltip } from 'antd';\nimport PropTypes from 'prop-types';\nimport {\n  attachMediaStream,\n  closeMediaStream,\n  updateInputDevices,\n} from '../../utils';\nimport SoundMeter from './soundmeter';\n\nconst Option = Select.Option;\nexport default class MediaSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    let settings = props.settings;\n    this.state = {\n      visible: false,\n      videoDevices: [],\n      audioDevices: [],\n      audioOutputDevices: [],\n      resolution: settings.resolution,\n      bandwidth: settings.bandwidth,\n      selectedAudioDevice: settings.selectedAudioDevice,\n      selectedVideoDevice: settings.selectedVideoDevice,\n      codec: settings.codec,\n      isDevMode: settings.isDevMode,\n      frameRate: settings.frameRate,\n    };\n\n    try {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      window.audioContext = new AudioContext();\n    } catch (e) {\n      console.log('Web Audio API not supported.');\n    }\n  }\n\n  setDeviceState = () => {\n    updateInputDevices().then(data => {\n      if (\n        this.state.selectedAudioDevice === '' &&\n        data.audioDevices.length > 0\n      ) {\n        this.setState({ selectedAudioDevice: data.audioDevices[0].deviceId });\n      }\n      if (\n        this.state.selectedVideoDevice === '' &&\n        data.videoDevices.length > 0\n      ) {\n        this.setState({ selectedVideoDevice: data.videoDevices[0].deviceId });\n      }\n\n      this.setState({\n        videoDevices: data.videoDevices,\n        audioDevices: data.audioDevices,\n        audioOutputDevices: data.audioOutputDevices,\n      });\n\n      this.state.audioDevices.map((device, index) => {\n        if (this.state.selectedAudioDevice == device.deviceId) {\n          console.log('Selected audioDevice::' + JSON.stringify(device));\n        }\n      });\n      this.state.videoDevices.map((device, index) => {\n        if (this.state.selectedVideoDevice == device.deviceId) {\n          console.log('Selected videoDevice::' + JSON.stringify(device));\n        }\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.setDeviceState();\n  }\n\n  soundMeterProcess = () => {\n    var val = window.soundMeter.instant.toFixed(2) * 348 + 1;\n    this.setState({ audioLevel: val });\n    if (this.state.visible) setTimeout(this.soundMeterProcess, 100);\n  };\n\n  startPreview = () => {\n    if (window.stream) {\n      closeMediaStream(window.stream);\n    }\n    let videoElement = this.refs['previewVideo'];\n    let audioSource = this.state.selectedAudioDevice;\n    let videoSource = this.state.selectedVideoDevice;\n    this.soundMeter = window.soundMeter = new SoundMeter(window.audioContext);\n    let soundMeterProcess = this.soundMeterProcess;\n    let constraints = {\n      audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n      video: { deviceId: videoSource ? { exact: videoSource } : undefined },\n    };\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(stream => {\n        window.stream = stream; // make stream available to console\n        //videoElement.srcObject = stream;\n        attachMediaStream(videoElement, stream);\n        soundMeter.connectToSource(stream);\n        setTimeout(soundMeterProcess, 100);\n        this.setDeviceState();\n      })\n      .catch(error => {\n        this.props.setLocalStreamError(error);\n      });\n  };\n\n  stopPreview = () => {\n    if (window.stream) {\n      closeMediaStream(window.stream);\n    }\n  };\n\n  componentWillUnmount() {}\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n    setTimeout(this.startPreview, 100);\n  };\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    });\n    this.stopPreview();\n    if (this.props.onMediaSettingsChanged !== undefined) {\n      this.props.onMediaSettingsChanged(\n        this.state.selectedAudioDevice,\n        this.state.selectedVideoDevice,\n        this.state.resolution,\n        this.state.bandwidth,\n        this.state.codec,\n        this.state.frameRate,\n        this.state.isDevMode,\n        true\n      );\n    }\n  };\n\n  handleCancel = e => {\n    let settings = this.props.settings;\n    this.setState({ ...settings, visible: false });\n    this.stopPreview();\n  };\n\n  handleAudioDeviceChange = e => {\n    this.setState({ selectedAudioDevice: e });\n    setTimeout(this.startPreview, 100);\n  };\n\n  handleVideoDeviceChange = e => {\n    this.setState({ selectedVideoDevice: e });\n    setTimeout(this.startPreview, 100);\n  };\n\n  handleResolutionChange = e => {\n    this.setState({ resolution: e });\n  };\n\n  handleVideoCodeChange = e => {\n    this.setState({ codec: e });\n  };\n\n  handleBandWidthChange = e => {\n    this.setState({ bandwidth: e });\n  };\n\n  handleFrameRateChange = e => {\n    this.setState({ frameRate: e });\n  };\n\n  handleDevChange = checked => {\n    this.setState({\n      isDevMode: checked,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {\n          <Tooltip title=\"System setup\">\n            <Button\n              shape=\"circle\"\n              icon=\"setting\"\n              ghost\n              onClick={this.showModal}\n            />\n          </Tooltip>\n        }\n        <Modal\n          title=\"Settings\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"Ok\"\n          cancelText=\"Cancel\"\n        >\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Micphone</span>\n            <div className=\"settings-item-right\">\n              <Select\n                value={this.state.selectedAudioDevice}\n                style={{ width: 350 }}\n                onChange={this.handleAudioDeviceChange}\n              >\n                {this.state.audioDevices.map((device, index) => {\n                  return (\n                    <Option value={device.deviceId} key={device.deviceId}>\n                      {device.label}\n                    </Option>\n                  );\n                })}\n              </Select>\n              <div\n                ref=\"progressbar\"\n                style={{\n                  width: this.state.audioLevel + 'px',\n                  height: '10px',\n                  backgroundColor: '#8dc63f',\n                  marginTop: '20px',\n                }}\n              ></div>\n            </div>\n          </div>\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Camera</span>\n            <div className=\"settings-item-right\">\n              <Select\n                value={this.state.selectedVideoDevice}\n                style={{ width: 350 }}\n                onChange={this.handleVideoDeviceChange}\n              >\n                {this.state.videoDevices.map((device, index) => {\n                  return (\n                    <Option value={device.deviceId} key={device.deviceId}>\n                      {device.label}\n                    </Option>\n                  );\n                })}\n              </Select>\n              <div className=\"settings-video-container\">\n                <video\n                  id=\"previewVideo\"\n                  ref=\"previewVideo\"\n                  autoPlay\n                  playsInline\n                  muted={true}\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'contain',\n                  }}\n                ></video>\n              </div>\n            </div>\n          </div>\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Resolution</span>\n            <div className=\"settings-item-right\">\n              <Select\n                style={{ width: 350 }}\n                value={this.state.resolution}\n                onChange={this.handleResolutionChange}\n              >\n                <Option value=\"qqvga\">QQVGA(160x90)</Option>\n                <Option value=\"qvga\">QVGA(320x180)</Option>\n                <Option value=\"vga\">VGA(640x360)</Option>\n                <Option value=\"shd\">SHD(960x540)</Option>\n                <Option value=\"hd\">HD(1280x720)</Option>\n              </Select>\n            </div>\n          </div>\n          {!this.props.isLoggedIn && (\n            <div className=\"settings-item\">\n              <span className=\"settings-item-left\">Codec</span>\n              <div className=\"settings-item-right\">\n                <Select\n                  style={{ width: 350 }}\n                  value={this.state.codec}\n                  onChange={this.handleVideoCodeChange}\n                >\n                  <Option value=\"h264\">H264</Option>\n                  <Option value=\"vp8\">VP8</Option>\n                  <Option value=\"vp9\">VP9</Option>\n                </Select>\n              </div>\n            </div>\n          )}\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Bitrate</span>\n            <div className=\"settings-item-right\">\n              <Select\n                style={{ width: 350 }}\n                value={this.state.bandwidth}\n                onChange={this.handleBandWidthChange}\n              >\n                <Option value=\"100\">Lowest(100kbps)</Option>\n                <Option value=\"256\">Low(256kbps)</Option>\n                <Option value=\"512\">Medium(512kbps)</Option>\n                <Option value=\"1024\">High(1Mbps)</Option>\n                <Option value=\"4096\">Lan(4Mbps)</Option>\n              </Select>\n            </div>\n          </div>\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Frame Rate</span>\n            <div className=\"settings-item-right\">\n              <InputNumber\n                min={1}\n                max={30}\n                defaultValue={this.state.frameRate}\n                onChange={this.handleFrameRateChange}\n              />\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nMediaSettings.propTypes = {\n  onMediaSettingsChanged: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}