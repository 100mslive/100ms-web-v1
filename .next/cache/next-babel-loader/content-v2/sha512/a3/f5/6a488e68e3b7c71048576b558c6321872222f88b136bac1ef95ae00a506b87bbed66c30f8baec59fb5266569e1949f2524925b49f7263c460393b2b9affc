{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ChatBubble from './chatbubble';\nimport ChatInput from './chatinput';\nexport default class ChatFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: props.messages || []\n    };\n  }\n\n  _scrollToBottom() {\n    const {\n      chat\n    } = this.refs;\n\n    if (chat !== undefined) {\n      const scrollHeight = chat.scrollHeight;\n      const height = chat.clientHeight;\n      const maxScrollTop = scrollHeight - height;\n      ReactDOM.findDOMNode(chat).scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n  }\n\n  _renderGroup(messages, index, id) {\n    var group = [];\n\n    for (var i = index; messages[i] ? messages[i].id == id : false; i--) {\n      group.push(messages[i]);\n    }\n\n    var message_nodes = group.reverse().map((curr, index) => {\n      return __jsx(ChatBubble, {\n        key: Math.random().toString(36),\n        message: curr\n      });\n    });\n    return __jsx(\"div\", {\n      key: Math.random().toString(36),\n      className: \"chatbubble-wrapper\"\n    }, message_nodes);\n  }\n\n  _renderMessages(messages) {\n    var message_nodes = messages.map((curr, index) => {\n      // Find diff in message type or no more messages\n      if ((messages[index + 1] ? false : true) || messages[index + 1].id != curr.id) {\n        return this._renderGroup(messages, index, curr.id);\n      }\n    }); // return nodes\n\n    return message_nodes;\n  }\n\n  render() {\n    window.setTimeout(() => {\n      this._scrollToBottom();\n    }, 10);\n    const messages = [{\n      id: 0,\n      message: 'hello every one',\n      senderName: 'kevin kang'\n    }];\n    return __jsx(\"div\", {\n      id: \"chat-panel\",\n      className: \"flex flex-1 flex-col max-h-full\",\n      style: {\n        backgroundColor: '#000000'\n      }\n    }, __jsx(\"div\", {\n      className: \"border-b border-gray-800 h-10 flex items-center justify-between pr-3\"\n    }, __jsx(\"span\", {\n      className: \"title-chat\"\n    }, \"Chat\"), __jsx(\"button\", {\n      className: \"text-white text-xl\",\n      onClick: this.props.onClose\n    }, \"\\xD7\")), __jsx(\"div\", {\n      ref: \"chat\",\n      className: \"chat-history\"\n    }, __jsx(\"div\", null, this._renderMessages(this.props.messages))), __jsx(ChatInput, {\n      onSendMessage: this.props.onSendMessage\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}