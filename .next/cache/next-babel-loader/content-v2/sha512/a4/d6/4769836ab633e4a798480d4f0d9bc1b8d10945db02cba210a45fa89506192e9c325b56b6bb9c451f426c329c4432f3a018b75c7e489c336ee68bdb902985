{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Layout, Button, Modal, notification, Spin } from 'antd';\nvar confirm = Modal.confirm;\nvar Header = Layout.Header,\n    Content = Layout.Content,\n    Sider = Layout.Sider;\nimport MediaSettings from './Settings';\nimport ChatFeed from './Chat';\nimport Message from './Chat/message';\nimport { AppContextProvider, AppContext } from '../stores/AppContext';\nimport LoginForm from './LoginForm';\nimport Conference from './Conference';\nimport { HMSClient, HMSPeer, HMSClientConfig } from '@100mslive/hmsvideo-web';\nimport { ENVS, ROLES } from '../constants';\nimport { dependencies } from '../../package.json';\nimport { getRequest } from '../utils';\nvar sdkVersion = dependencies['@100mslive/hmsvideo-web'].substring(1);\nconsole.info(\"Using hmsvideo-web SDK version \".concat(sdkVersion));\n\nfunction getToken(_x) {\n  return _getToken.apply(this, arguments);\n}\n\nfunction _getToken() {\n  _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(_ref) {\n    var room_id, user_name, _ref$role, role, env, endpoint, _yield$fetch$then$cat, token;\n\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            room_id = _ref.room_id, user_name = _ref.user_name, _ref$role = _ref.role, role = _ref$role === void 0 ? 'guest' : _ref$role, env = _ref.env;\n            endpoint = process.env.NEXT_PUBLIC_TOKEN_ENDPOINT || '/api/token';\n            _context9.next = 4;\n            return fetch(endpoint, {\n              method: 'POST',\n              body: JSON.stringify({\n                room_id: room_id,\n                user_name: user_name,\n                env: env,\n                role: role\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (err) {\n              return console.log('Error client token: ', err);\n            });\n\n          case 4:\n            _yield$fetch$then$cat = _context9.sent;\n            token = _yield$fetch$then$cat.token;\n            return _context9.abrupt(\"return\", token);\n\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getToken.apply(this, arguments);\n}\n\nvar OldAppUI = /*#__PURE__*/function (_React$Component) {\n  _inherits(OldAppUI, _React$Component);\n\n  var _super = _createSuper(OldAppUI);\n\n  function OldAppUI(props) {\n    var _this;\n\n    _classCallCheck(this, OldAppUI);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cleanUp\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var shouldRedirectToHome,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              shouldRedirectToHome = _args.length > 0 && _args[0] !== undefined ? _args[0] : true;\n\n              if (!shouldRedirectToHome) {\n                _context.next = 15;\n                break;\n              }\n\n              window.history.pushState({}, '100ms', \"\".concat(window.location.protocol, \"//\").concat(window.location.host));\n              _context.t0 = _this.conference;\n\n              if (!_context.t0) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 7;\n              return _this.conference.cleanUp();\n\n            case 7:\n              _context.t1 = _this.props.client;\n\n              if (!_context.t1) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 11;\n              return _this.props.client.disconnect();\n\n            case 11:\n              _this.props.setClient(null);\n\n              _this.props.setRoomState({\n                isConnected: false,\n                login: false\n              });\n\n              _context.next = 16;\n              break;\n\n            case 15:\n              window.location.reload();\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_notification\", function (message, description) {\n      notification.info({\n        message: message,\n        description: description,\n        placement: 'bottomRight'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_createClient\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n        var userName, env, roomId, role, url, authToken, peer, config;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                userName = _ref3.userName, env = _ref3.env, roomId = _ref3.roomId, role = _ref3.role;\n                url = \"wss://\".concat(env, \".100ms.live\");\n                _context2.next = 4;\n                return getToken({\n                  env: env,\n                  room_id: roomId,\n                  user_name: userName,\n                  role: role\n                });\n\n              case 4:\n                authToken = _context2.sent;\n                console.log(\"%cTOKEN IS: \".concat(authToken), 'color: orange');\n                console.log('Websocket URL', url);\n                _context2.prev = 7;\n                peer = new HMSPeer(userName, authToken);\n                config = new HMSClientConfig({\n                  endpoint: url\n                });\n                return _context2.abrupt(\"return\", new HMSClient(peer, config));\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](7);\n                console.error('ERROR: ', _context2.t0);\n                alert('Invalid token');\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[7, 13]]);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleJoin\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var client;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this.props.setRoomState({\n                loading: true\n              });\n\n              _this.hideMessage = function () {}; //TODO this should reflect in initialization as well\n\n\n              ![ROLES.LIVE_RECORD, ROLES.VIEWER].includes(_this.role) && _this._onMediaSettingsChanged(_this.props.settings.selectedAudioDevice, _this.props.settings.selectedVideoDevice, _this.props.settings.resolution, _this.props.settings.bandwidth, _this.props.settings.codec, _this.props.settings.frameRate, _this.props.settings.isDevMode);\n              _context5.next = 5;\n              return _this._createClient({\n                userName: _this.props.loginInfo.displayName,\n                env: _this.props.loginInfo.env,\n                roomId: _this.props.loginInfo.roomId,\n                role: _this.props.loginInfo.role\n              });\n\n            case 5:\n              client = _context5.sent;\n              client.connect()[\"catch\"](function (error) {\n                alert(error.message);\n              });\n              window.onunload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _this._cleanUp();\n\n                      case 2:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n              client.on('peer-join', function (room, peer) {\n                _this._notification('Peer Join', \"peer => \".concat(peer.name, \" joined \").concat(room, \"!\"));\n              });\n              client.on('peer-leave', function (room, peer) {\n                _this._notification('Peer Leave', \"peer => \".concat(peer.name, \" left \").concat(room, \"!\"));\n              });\n              client.on('connect', function () {\n                console.log('on connect called');\n                if (_this.props.roomState.isConnected) return;\n                console.log('connected!');\n\n                _this._handleTransportOpen();\n              });\n              client.on('disconnect', function () {\n                console.log('disconnected!');\n\n                _this.props.setRoomState({\n                  loading: false\n                });\n              });\n              client.on('stream-add', function (room, peer, streamInfo) {\n                console.log('stream-add', JSON.stringify({\n                  room: room,\n                  peer: peer,\n                  streamInfo: streamInfo\n                }, null, 2));\n              });\n              client.on('stream-remove', function (room, peer, streamInfo) {\n                console.log('stream-remove', JSON.stringify({\n                  room: room,\n                  peer: peer,\n                  streamInfo: streamInfo\n                }, null, 2));\n              });\n              client.on('broadcast', function (room, peer, message) {\n                console.log('broadcast: ', room, peer.name, message);\n\n                _this._onMessageReceived(peer.name, message);\n              });\n              client.on('disconnected', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        console.log(\"%c[APP] TEARING DOWN\", 'color:#fc0');\n                        location.reload();\n\n                      case 2:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              })));\n\n              _this.props.setClient(client);\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleTransportOpen\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var redirectURL;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _this.props.setRoomState({\n                isConnected: true\n              });\n\n              _context6.prev = 1;\n              _context6.next = 4;\n              return _this.props.client.join(_this.props.loginInfo.roomId)[\"catch\"](function (error) {\n                console.log('JOIN ERROR:', error);\n              });\n\n            case 4:\n              redirectURL = \"\".concat(window.location.protocol, \"//\").concat(window.location.host, \"/?room=\").concat(_this.props.loginInfo.roomId, \"&env=\").concat(_this.props.loginInfo.env, \"&role=\").concat(_this.props.loginInfo.role);\n              window.history.pushState({}, '100ms', redirectURL);\n\n              _this.props.setRoomState({\n                login: true,\n                loading: false\n              });\n\n              _this._notification('Connected!', \"Welcome to the \".concat(_this.props.loginInfo.roomName || '100ms', \" room => \").concat(_this.props.loginInfo.roomId)); // Local video & audio are disabled for the 'live-record'\n              // and 'viewer' roles. Their local stream is also not published.\n\n\n              if ([ROLES.LIVE_RECORD, ROLES.VIEWER].includes(_this.props.loginInfo.role)) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 11;\n              return _this.conference.handleLocalStream();\n\n            case 11:\n              _context6.next = 16;\n              break;\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](1);\n              console.error('HANDLE THIS ERROR: ', _context6.t0);\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 13]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleLeave\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var this2;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              this2 = _assertThisInitialized(_this);\n              confirm({\n                title: 'Leave Now?',\n                content: 'Do you want to leave the room?',\n                onOk: function onOk() {\n                  return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            _context7.next = 2;\n                            return this2._cleanUp();\n\n                          case 2:\n                            this2.props.setRoomState({\n                              login: false\n                            });\n\n                          case 3:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7);\n                  }))();\n                },\n                onCancel: function onCancel() {\n                  console.log('Cancel');\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleAudioTrackEnabled\", function (enabled) {\n      _this.props.setRoomState({\n        localAudioEnabled: enabled\n      });\n\n      _this.conference.muteMediaTrack('audio', enabled);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleVideoTrackEnabled\", function (enabled) {\n      _this.props.setRoomState({\n        localVideoEnabled: enabled\n      });\n\n      _this.conference.muteMediaTrack('video', enabled);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleScreenSharing\", function (enabled) {\n      _this.props.setRoomState({\n        screenSharingEnabled: enabled\n      });\n\n      _this.conference.handleScreenSharing(enabled);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onRef\", function (ref) {\n      _this.conference = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_openOrCloseLeftContainer\", function (collapsed) {\n      _this.props.setRoomState({\n        collapsed: collapsed,\n        hasUnreadMessages: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onMediaSettingsChanged\", function (selectedAudioDevice, selectedVideoDevice, resolution, bandwidth, codec, frameRate, isDevMode) {\n      var reloadPage = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n\n      _this.props.setSettings({\n        selectedAudioDevice: selectedAudioDevice,\n        selectedVideoDevice: selectedVideoDevice,\n        resolution: resolution,\n        bandwidth: bandwidth,\n        codec: codec,\n        frameRate: frameRate,\n        isDevMode: isDevMode\n      });\n\n      var constraints = {\n        frameRate: frameRate,\n        bitrate: bandwidth,\n        resolution: resolution,\n        advancedMediaConstraints: {\n          audio: {\n            deviceId: selectedAudioDevice\n          },\n          video: {\n            deviceId: selectedVideoDevice\n          }\n        }\n      };\n\n      if (reloadPage) {\n        _this.props.client && _this.props.client.applyConstraints(constraints, _this.props.client.local);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onMessageReceived\", function (from, message) {\n      console.log('Received message:' + from + ':' + message);\n      var messages = _this.props.roomState.messages;\n      var uid = 1;\n      messages.push(new Message({\n        id: uid,\n        message: message,\n        senderName: from\n      }));\n      var hasUnreadMessages = false;\n\n      if (_this.props.roomState.collapsed) {\n        hasUnreadMessages = true;\n      }\n\n      _this.props.setRoomState({\n        messages: messages,\n        hasUnreadMessages: hasUnreadMessages\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSendMessage\", function (data) {\n      console.log('Send message:' + data);\n      var info = {\n        senderName: _this.props.loginInfo.displayName,\n        msg: data\n      };\n\n      _this.props.client.broadcast(info, _this.props.client.rid);\n\n      var messages = _this.props.roomState.messages;\n      var uid = 0;\n      messages.push(new Message({\n        id: uid,\n        message: data,\n        senderName: 'me'\n      }));\n\n      _this.props.setRoomState({\n        messages: messages\n      });\n    });\n\n    props.setClient(null);\n    props.setRoomState({\n      isConnected: false\n    });\n\n    if (!props.settings.codec) {\n      props.setSettings({\n        selectedAudioDevice: '',\n        selectedVideoDevice: '',\n        resolution: 'qvga',\n        bandwidth: 256,\n        codec: 'vp8',\n        frameRate: 20,\n        isDevMode: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(OldAppUI, [{\n    key: \"isValidParams\",\n    value: function isValidParams() {\n      var validRoomPattern = /^[a-zA-Z0-9-.:_]*$/g;\n      var validRoles = Object.values(ROLES);\n      var validEnvs = Object.values(ENVS);\n\n      try {\n        var params = getRequest();\n\n        if (params.role && !validRoles.includes(params.role.toLowerCase())) {\n          return [false, 'Role'];\n        } else if (params.env && !validEnvs.includes(params.env.toLowerCase())) {\n          return [false, 'environment'];\n        } else if (params.room && !validRoomPattern.test(params.room)) {\n          return [false, 'Room ID'];\n        } else {\n          return [true, null];\n        }\n      } catch (error) {\n        if (error instanceof URIError) {\n          return [false, 'URL'];\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$roomState = this.props.roomState,\n          login = _this$props$roomState.login,\n          loading = _this$props$roomState.loading,\n          localAudioEnabled = _this$props$roomState.localAudioEnabled,\n          localVideoEnabled = _this$props$roomState.localVideoEnabled,\n          screenSharingEnabled = _this$props$roomState.screenSharingEnabled,\n          collapsed = _this$props$roomState.collapsed,\n          vidFit = _this$props$roomState.vidFit;\n      var isValidParams = this.isValidParams()[0];\n      return __jsx(Layout, {\n        className: \"app-layout\"\n      }, __jsx(Header, {\n        className: \"app-header\",\n        style: {\n          backgroundColor: '#1a1619',\n          zIndex: '10',\n          padding: '0 0',\n          margin: '0 auto',\n          width: '100%'\n        }\n      }, __jsx(\"div\", {\n        className: \"app-header-left\"\n      }, __jsx(\"a\", {\n        href: \"https://100ms.live/\",\n        target: \"_blank\"\n      }, __jsx(\"img\", {\n        src: \"/logo-blue-dark.svg\",\n        className: \"h-8\"\n      }))), __jsx(\"div\", {\n        className: \"app-header-right\"\n      }, __jsx(MediaSettings, {\n        onMediaSettingsChanged: this._onMediaSettingsChanged,\n        settings: this.props.settings,\n        isLoggedIn: login,\n        setLocalStreamError: this.props.setLocalStreamError\n      }))), __jsx(Content, {\n        className: \"app-center-layout\"\n      }, !isValidParams ? __jsx(\"div\", {\n        className: \"min-h-screen flex items-center justify-center w-full py-8 px-4 sm:px-6 lg:px-8\",\n        style: {\n          backgroundColor: '#1a1619'\n        }\n      }, __jsx(\"div\", {\n        className: \"overflow-hidden shadow rounded-lg max-w-sm w-full px-4 py-5 p-6 bg-gray-100 my-3\"\n      }, __jsx(\"div\", {\n        className: \"\"\n      }, __jsx(\"h2\", {\n        className: \"mt-2 text-center text-3xl leading-9 font-extrabold text-gray-900\"\n      }, \"100ms Conference\"), __jsx(\"p\", {\n        className: \"mt-2 text-center text-sm leading-5 text-gray-600 mb-2\"\n      }, \"The requested \", this.isValidParams()[1], \" is invalid. Please verify your credentials.\"), __jsx(\"button\", {\n        className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none transition duration-150 ease-in-out\",\n        onClick: function onClick() {\n          _this2._cleanUp();\n\n          location.reload();\n        }\n      }, \"Back to Home\")))) : login ? __jsx(Layout, {\n        className: \"app-content-layout\"\n      }, __jsx(Sider, {\n        width: 320,\n        collapsedWidth: 0,\n        trigger: null,\n        collapsible: true,\n        collapsed: collapsed,\n        style: {\n          backgroundColor: '#1a1619'\n        }\n      }, __jsx(\"div\", {\n        className: \"left-container\"\n      }, __jsx(ChatFeed, {\n        messages: this.props.roomState.messages,\n        onSendMessage: this._onSendMessage,\n        onClose: function onClose() {\n          return _this2._openOrCloseLeftContainer(!collapsed);\n        }\n      }))), __jsx(Layout, {\n        className: \"app-right-layout\",\n        style: {\n          height: 'calc(100vh - 64px)'\n        }\n      }, __jsx(Content, {\n        style: {\n          flex: 1,\n          position: 'relative'\n        }\n      }, __jsx(\"div\", null, __jsx(AppContext.Consumer, null, function (context) {\n        return __jsx(Conference, {\n          roomName: _this2.props.loginInfo.roomName,\n          roomId: _this2.props.loginInfo.roomId,\n          collapsed: _this2.props.roomState.collapsed,\n          client: context.client,\n          settings: context.settings,\n          localAudioEnabled: localAudioEnabled,\n          localVideoEnabled: localVideoEnabled,\n          vidFit: vidFit,\n          loginInfo: _this2.props.loginInfo,\n          ref: function ref(_ref10) {\n            _this2.conference = _ref10;\n          },\n          onScreenToggle: function onScreenToggle() {\n            return _this2._handleScreenSharing(!screenSharingEnabled);\n          },\n          onLeave: _this2._handleLeave,\n          onChatToggle: function onChatToggle() {\n            _this2._openOrCloseLeftContainer(!collapsed);\n          },\n          isChatOpen: !_this2.props.roomState.collapsed,\n          cleanUp: _this2._cleanUp,\n          role: _this2.props.loginInfo.role,\n          hasUnreadMessages: _this2.props.roomState.hasUnreadMessages,\n          setLocalStreamError: _this2.props.setLocalStreamError\n        });\n      }))))) : loading ? __jsx(\"div\", {\n        className: \"flex items-center justify-center\",\n        style: {\n          height: 'calc(100vh - 64px)'\n        }\n      }, __jsx(Spin, {\n        size: \"large\",\n        tip: \"Connecting...\"\n      })) : __jsx(\"div\", {\n        className: \"relative w-full\"\n      }, __jsx(AppContext.Consumer, null, function (context) {\n        return __jsx(LoginForm, {\n          settings: context.settings,\n          loginInfo: context.loginInfo,\n          setSettings: context.setSettings,\n          setLoginInfo: context.setLoginInfo,\n          handleLogin: _this2._handleJoin,\n          createClient: _this2._createClient,\n          client: context.client,\n          setClient: context.setClient,\n          roomState: context.roomState,\n          setRoomState: context.setRoomState,\n          setLocalStreamError: _this2.props.setLocalStreamError\n        });\n      })), this.props.localStreamError && __jsx(Modal, {\n        visible: !!this.props.localStreamError,\n        title: this.props.localStreamError.title,\n        footer: [__jsx(Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: function onClick() {\n            _this2._cleanUp(false);\n          }\n        }, \"Try Again\")]\n      }, __jsx(\"p\", null, this.props.localStreamError.message))));\n    }\n  }]);\n\n  return OldAppUI;\n}(React.Component);\n\nvar OldApp = /*#__PURE__*/function (_React$Component2) {\n  _inherits(OldApp, _React$Component2);\n\n  var _super2 = _createSuper(OldApp);\n\n  function OldApp() {\n    _classCallCheck(this, OldApp);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(OldApp, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(AppContext.Consumer, null, function (context) {\n        return __jsx(OldAppUI, {\n          settings: context.settings,\n          roomState: context.roomState,\n          loginInfo: context.loginInfo,\n          setSettings: context.setSettings,\n          setLoginInfo: context.setLoginInfo,\n          setRoomState: context.setRoomState,\n          setClient: context.setClient,\n          client: context.client,\n          localStreamError: context.localStreamError,\n          setLocalStreamError: context.setLocalStreamError\n        });\n      });\n    }\n  }]);\n\n  return OldApp;\n}(React.Component);\n\nvar App = /*#__PURE__*/function (_React$Component3) {\n  _inherits(App, _React$Component3);\n\n  var _super3 = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(AppContextProvider, null, __jsx(OldApp, null));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}