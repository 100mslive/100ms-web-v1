{"ast":null,"code":"var _jsxFileName = \"/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Conference/gallery.jsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { LocalVideoView, MainVideoView } from '../Videoview';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { largestRect } from 'rect-scaler';\n\nvar Gallery = function Gallery(_ref) {\n  var id = _ref.id,\n      videoCount = _ref.videoCount,\n      client = _ref.client,\n      localScreen = _ref.localScreen,\n      localStream = _ref.localStream,\n      audioMuted = _ref.audioMuted,\n      videoMuted = _ref.videoMuted,\n      streams = _ref.streams,\n      _onPin = _ref.onPin,\n      loginInfo = _ref.loginInfo,\n      onRequest = _ref.onRequest;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"relative w-full flex flex-wrap justify-center items-center\",\n    style: {\n      height: 'calc(100vh - 128px)',\n      backgroundColor: '#1a1619'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(ContainerDimensions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    var w = '100%';\n    var h = '100%';\n\n    if (videoCount > 0) {\n      var largestRectObj = largestRect(width, height, videoCount, 160, 90);\n      w = largestRectObj.width;\n      h = largestRectObj.height;\n    }\n\n    return __jsx(React.Fragment, null, localStream && __jsx(\"div\", {\n      style: {\n        height: h,\n        width: w\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, __jsx(LocalVideoView, {\n      id: id + '-video',\n      label: \"\".concat(loginInfo.displayName, \" (You)\"),\n      client: client,\n      stream: localStream,\n      audioMuted: audioMuted,\n      videoMuted: videoMuted,\n      videoType: \"localVideo\",\n      onPin: function onPin() {\n        _onPin(id + '-video');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    })), streams.map(function (item, index) {\n      return __jsx(\"div\", {\n        key: item.mid,\n        style: {\n          height: h,\n          width: w\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, __jsx(MainVideoView, {\n        id: item.mid,\n        stream: item.stream,\n        onPin: function onPin() {\n          _onPin(item.mid);\n        },\n        audioEnabled: item.audioEnabled,\n        videoEnabled: item.videoEnabled,\n        screenshare: item.screenshare,\n        uid: item.uid,\n        onRequest: onRequest,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }\n      }));\n    }), localScreen && __jsx(\"div\", {\n      style: {\n        height: h,\n        width: w\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, __jsx(LocalVideoView, {\n      id: id + '-screen',\n      label: \"Your Screen\",\n      client: client,\n      stream: localScreen,\n      audioMuted: false,\n      videoMuted: false,\n      videoType: \"localScreen\",\n      onPin: function onPin() {\n        _onPin(id + '-screen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })));\n  })));\n};\n\n_c = Gallery;\nexport { Gallery };\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Conference/gallery.jsx"],"names":["React","LocalVideoView","MainVideoView","ContainerDimensions","largestRect","Gallery","id","videoCount","client","localScreen","localStream","audioMuted","videoMuted","streams","onPin","loginInfo","onRequest","height","backgroundColor","width","w","h","largestRectObj","displayName","map","item","index","mid","stream","audioEnabled","videoEnabled","screenshare","uid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LocalVideoView, MainVideoView } from '../Videoview';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { largestRect } from 'rect-scaler';\n\nconst Gallery = ({\n  id,\n  videoCount,\n  client,\n  localScreen,\n  localStream,\n  audioMuted,\n  videoMuted,\n  streams,\n  onPin,\n  loginInfo,\n  onRequest,\n}) => {\n  return (\n    <>\n      <div\n        className={`relative w-full flex flex-wrap justify-center items-center`}\n        style={{ height: 'calc(100vh - 128px)', backgroundColor: '#1a1619' }}\n      >\n        <ContainerDimensions>\n          {({ width, height }) => {\n            let w = '100%';\n            let h = '100%';\n            if (videoCount > 0) {\n              let largestRectObj = largestRect(\n                width,\n                height,\n                videoCount,\n                160,\n                90\n              );\n              w = largestRectObj.width;\n              h = largestRectObj.height;\n            }\n\n            return (\n              <>\n                {localStream && (\n                  <div style={{ height: h, width: w }}>\n                    <LocalVideoView\n                      id={id + '-video'}\n                      label={`${loginInfo.displayName} (You)`}\n                      client={client}\n                      stream={localStream}\n                      audioMuted={audioMuted}\n                      videoMuted={videoMuted}\n                      videoType=\"localVideo\"\n                      onPin={() => {\n                        onPin(id + '-video');\n                      }}\n                    />\n                  </div>\n                )}\n                {streams.map((item, index) => {\n                  return (\n                    <div key={item.mid} style={{ height: h, width: w }}>\n                      <MainVideoView\n                        id={item.mid}\n                        stream={item.stream}\n                        onPin={() => {\n                          onPin(item.mid);\n                        }}\n                        audioEnabled={item.audioEnabled}\n                        videoEnabled={item.videoEnabled}\n                        screenshare={item.screenshare}\n                        uid={item.uid}\n                        onRequest={onRequest}\n                      />\n                    </div>\n                  );\n                })}\n\n                {localScreen && (\n                  <div style={{ height: h, width: w }}>\n                    <LocalVideoView\n                      id={id + '-screen'}\n                      label=\"Your Screen\"\n                      client={client}\n                      stream={localScreen}\n                      audioMuted={false}\n                      videoMuted={false}\n                      videoType=\"localScreen\"\n                      onPin={() => {\n                        onPin(id + '-screen');\n                      }}\n                    />\n                  </div>\n                )}\n              </>\n            );\n          }}\n        </ContainerDimensions>\n      </div>\n    </>\n  );\n};\n\nexport { Gallery };\n"]},"metadata":{},"sourceType":"module"}