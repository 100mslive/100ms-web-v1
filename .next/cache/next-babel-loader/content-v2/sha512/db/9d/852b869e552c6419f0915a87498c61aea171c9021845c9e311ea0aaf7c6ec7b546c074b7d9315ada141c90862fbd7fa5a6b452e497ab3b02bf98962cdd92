{"ast":null,"code":"import _classCallCheck from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ChatBubble from './chatbubble';\nimport ChatInput from './chatinput';\n\nvar ChatFeed = /*#__PURE__*/function (_Component) {\n  _inherits(ChatFeed, _Component);\n\n  var _super = _createSuper(ChatFeed);\n\n  function ChatFeed(props) {\n    var _this;\n\n    _classCallCheck(this, ChatFeed);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      messages: props.messages || []\n    };\n    return _this;\n  }\n\n  _createClass(ChatFeed, [{\n    key: \"_scrollToBottom\",\n    value: function _scrollToBottom() {\n      var chat = this.refs.chat;\n\n      if (chat !== undefined) {\n        var scrollHeight = chat.scrollHeight;\n        var height = chat.clientHeight;\n        var maxScrollTop = scrollHeight - height;\n        ReactDOM.findDOMNode(chat).scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n      }\n    }\n  }, {\n    key: \"_renderGroup\",\n    value: function _renderGroup(messages, index, id) {\n      var group = [];\n\n      for (var i = index; messages[i] ? messages[i].id == id : false; i--) {\n        group.push(messages[i]);\n      }\n\n      var message_nodes = group.reverse().map(function (curr, index) {\n        return __jsx(ChatBubble, {\n          key: Math.random().toString(36),\n          message: curr\n        });\n      });\n      return __jsx(\"div\", {\n        key: Math.random().toString(36),\n        className: \"chatbubble-wrapper\"\n      }, message_nodes);\n    }\n  }, {\n    key: \"_renderMessages\",\n    value: function _renderMessages(messages) {\n      var _this2 = this;\n\n      var message_nodes = messages.map(function (curr, index) {\n        // Find diff in message type or no more messages\n        if ((messages[index + 1] ? false : true) || messages[index + 1].id != curr.id) {\n          return _this2._renderGroup(messages, index, curr.id);\n        }\n      }); // return nodes\n\n      return message_nodes;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      window.setTimeout(function () {\n        _this3._scrollToBottom();\n      }, 10);\n      var messages = [{\n        id: 0,\n        message: 'hello every one',\n        senderName: 'kevin kang'\n      }];\n      return __jsx(\"div\", {\n        id: \"chat-panel\",\n        className: \"flex flex-1 flex-col max-h-full\",\n        style: {\n          backgroundColor: '#000000'\n        }\n      }, __jsx(\"div\", {\n        className: \"border-b border-gray-800 h-10 flex items-center justify-between pr-3\"\n      }, __jsx(\"span\", {\n        className: \"title-chat\"\n      }, \"Chat\"), __jsx(\"button\", {\n        className: \"text-white text-xl\",\n        onClick: this.props.onClose\n      }, \"\\xD7\")), __jsx(\"div\", {\n        ref: \"chat\",\n        className: \"chat-history\"\n      }, __jsx(\"div\", null, this._renderMessages(this.props.messages))), __jsx(ChatInput, {\n        onSendMessage: this.props.onSendMessage\n      }));\n    }\n  }]);\n\n  return ChatFeed;\n}(Component);\n\nexport { ChatFeed as default };","map":null,"metadata":{},"sourceType":"module"}