{"ast":null,"code":"var _jsxFileName = \"/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/ToolShare.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { Modal, Button, Tooltip, Input, Icon } from 'antd';\nimport { ControlButton } from './Controls/ControlButton';\nimport ShareIcon from 'mdi-react/ShareIcon';\nexport default class ToolShare extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"showModal\", () => {\n      this.setState({\n        visible: true\n      });\n    });\n\n    _defineProperty(this, \"handleOk\", e => {\n      this.setState({\n        visible: false\n      });\n    });\n\n    _defineProperty(this, \"handleCancel\", e => {\n      this.setState({\n        visible: false\n      });\n    });\n\n    _defineProperty(this, \"onFocus\", e => {\n      ReactDOM.findDOMNode(e.target).select();\n    });\n\n    this.state = {\n      visible: false\n    };\n    const url = new URLSearchParams(props.url);\n    url.delete('role');\n    this.url = decodeURIComponent(url.toString());\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, __jsx(ControlButton, {\n      icon: __jsx(ShareIcon, {\n        className: \"text-indigo-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }),\n      activeIcon: __jsx(ShareIcon, {\n        className: \"text-red-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }\n      }),\n      label: \"Share\",\n      isActive: false,\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), __jsx(Modal, {\n      title: \"Shared conference\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      okText: \"Ok\",\n      cancelText: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Send link to your friends\"), __jsx(Input, {\n      onFocus: this.onFocus,\n      readOnly: true,\n      value: this.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\nToolShare.propTypes = {\n  roomInfo: PropTypes.any\n};","map":{"version":3,"sources":["/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/ToolShare.js"],"names":["React","PropTypes","ReactDOM","Modal","Button","Tooltip","Input","Icon","ControlButton","ShareIcon","ToolShare","Component","constructor","props","setState","visible","e","findDOMNode","target","select","state","url","URLSearchParams","delete","decodeURIComponent","toString","render","showModal","handleOk","handleCancel","onFocus","propTypes","roomInfo","any"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,IAAxC,QAAoD,MAApD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,eAAe,MAAMC,SAAN,SAAwBV,KAAK,CAACW,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,uCAWP,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAfkB;;AAAA,sCAiBRC,CAAC,IAAI;AACd,WAAKF,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KArBkB;;AAAA,0CAuBJC,CAAC,IAAI;AAClB,WAAKF,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA3BkB;;AAAA,qCA6BTC,CAAC,IAAI;AACbd,MAAAA,QAAQ,CAACe,WAAT,CAAqBD,CAAC,CAACE,MAAvB,EAA+BC,MAA/B;AACD,KA/BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE;AADE,KAAb;AAIA,UAAMM,GAAG,GAAG,IAAIC,eAAJ,CAAoBT,KAAK,CAACQ,GAA1B,CAAZ;AACAA,IAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX;AACA,SAAKF,GAAL,GAAWG,kBAAkB,CAACH,GAAG,CAACI,QAAJ,EAAD,CAA7B;AACD;;AAwBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AACE,MAAA,IAAI,EAAE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;AAEE,MAAA,UAAU,EAAE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFd;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,QAAQ,EAAE,KAJZ;AAKE,MAAA,OAAO,EAAE,KAAKC,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWL,OAFtB;AAGE,MAAA,IAAI,EAAE,KAAKa,QAHb;AAIE,MAAA,QAAQ,EAAE,KAAKC,YAJjB;AAKE,MAAA,MAAM,EAAC,IALT;AAME,MAAA,UAAU,EAAC,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE,MAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKC,OAArB;AAA8B,MAAA,QAAQ,EAAE,IAAxC;AAA8C,MAAA,KAAK,EAAE,KAAKT,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CARF,CARF,CADF;AA0BD;;AA7DoD;AAgEvDX,SAAS,CAACqB,SAAV,GAAsB;AACpBC,EAAAA,QAAQ,EAAE/B,SAAS,CAACgC;AADA,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { Modal, Button, Tooltip, Input, Icon } from 'antd';\nimport { ControlButton } from './Controls/ControlButton';\nimport ShareIcon from 'mdi-react/ShareIcon';\n\nexport default class ToolShare extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n    };\n\n    const url = new URLSearchParams(props.url);\n    url.delete('role');\n    this.url = decodeURIComponent(url.toString());\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  onFocus = e => {\n    ReactDOM.findDOMNode(e.target).select();\n  };\n\n  render() {\n    return (\n      <div>\n        <ControlButton\n          icon={<ShareIcon className=\"text-indigo-100\" />}\n          activeIcon={<ShareIcon className=\"text-red-100\" />}\n          label=\"Share\"\n          isActive={false}\n          onClick={this.showModal}\n        />\n        <Modal\n          title=\"Shared conference\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"Ok\"\n          cancelText=\"Cancel\"\n        >\n          <div>\n            <div>\n              <span>Send link to your friends</span>\n              <Input onFocus={this.onFocus} readOnly={true} value={this.url} />\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nToolShare.propTypes = {\n  roomInfo: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}