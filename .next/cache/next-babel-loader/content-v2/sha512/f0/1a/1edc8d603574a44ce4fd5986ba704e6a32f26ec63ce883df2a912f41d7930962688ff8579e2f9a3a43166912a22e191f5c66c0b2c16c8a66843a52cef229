{"ast":null,"code":"import _classCallCheck from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/Pravin/Study/nikhil/react/sample-app-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Settings/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Button, InputNumber, Modal, Select, Tooltip } from 'antd';\nimport PropTypes from 'prop-types';\nimport { attachMediaStream, closeMediaStream, updateInputDevices } from '../../utils';\nimport SoundMeter from './soundmeter';\nvar Option = Select.Option;\n\nvar MediaSettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(MediaSettings, _React$Component);\n\n  var _super = _createSuper(MediaSettings);\n\n  function MediaSettings(props) {\n    var _this;\n\n    _classCallCheck(this, MediaSettings);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setDeviceState\", function () {\n      updateInputDevices().then(function (data) {\n        if (_this.state.selectedAudioDevice === '' && data.audioDevices.length > 0) {\n          _this.setState({\n            selectedAudioDevice: data.audioDevices[0].deviceId\n          });\n        }\n\n        if (_this.state.selectedVideoDevice === '' && data.videoDevices.length > 0) {\n          _this.setState({\n            selectedVideoDevice: data.videoDevices[0].deviceId\n          });\n        }\n\n        _this.setState({\n          videoDevices: data.videoDevices,\n          audioDevices: data.audioDevices,\n          audioOutputDevices: data.audioOutputDevices\n        });\n\n        _this.state.audioDevices.map(function (device, index) {\n          if (_this.state.selectedAudioDevice == device.deviceId) {\n            console.log('Selected audioDevice::' + JSON.stringify(device));\n          }\n        });\n\n        _this.state.videoDevices.map(function (device, index) {\n          if (_this.state.selectedVideoDevice == device.deviceId) {\n            console.log('Selected videoDevice::' + JSON.stringify(device));\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"soundMeterProcess\", function () {\n      var val = window.soundMeter.instant.toFixed(2) * 348 + 1;\n\n      _this.setState({\n        audioLevel: val\n      });\n\n      if (_this.state.visible) setTimeout(_this.soundMeterProcess, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startPreview\", function () {\n      if (window.stream) {\n        closeMediaStream(window.stream);\n      }\n\n      var videoElement = _this.refs['previewVideo'];\n      var audioSource = _this.state.selectedAudioDevice;\n      var videoSource = _this.state.selectedVideoDevice;\n      _this.soundMeter = window.soundMeter = new SoundMeter(window.audioContext);\n      var soundMeterProcess = _this.soundMeterProcess;\n      var constraints = {\n        audio: {\n          deviceId: audioSource ? {\n            exact: audioSource\n          } : undefined\n        },\n        video: {\n          deviceId: videoSource ? {\n            exact: videoSource\n          } : undefined\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        window.stream = stream; // make stream available to console\n        //videoElement.srcObject = stream;\n\n        attachMediaStream(videoElement, stream);\n        soundMeter.connectToSource(stream);\n        setTimeout(soundMeterProcess, 100);\n\n        _this.setDeviceState();\n      })[\"catch\"](function (error) {\n        _this.props.setLocalStreamError(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopPreview\", function () {\n      if (window.stream) {\n        closeMediaStream(window.stream);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showModal\", function () {\n      _this.setState({\n        visible: true\n      });\n\n      setTimeout(_this.startPreview, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOk\", function (e) {\n      _this.setState({\n        visible: false\n      });\n\n      _this.stopPreview();\n\n      if (_this.props.onMediaSettingsChanged !== undefined) {\n        _this.props.onMediaSettingsChanged(_this.state.selectedAudioDevice, _this.state.selectedVideoDevice, _this.state.resolution, _this.state.bandwidth, _this.state.codec, _this.state.frameRate, _this.state.isDevMode, true);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function (e) {\n      var settings = _this.props.settings;\n\n      _this.setState(_objectSpread(_objectSpread({}, settings), {}, {\n        visible: false\n      }));\n\n      _this.stopPreview();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAudioDeviceChange\", function (e) {\n      _this.setState({\n        selectedAudioDevice: e\n      });\n\n      setTimeout(_this.startPreview, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVideoDeviceChange\", function (e) {\n      _this.setState({\n        selectedVideoDevice: e\n      });\n\n      setTimeout(_this.startPreview, 100);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResolutionChange\", function (e) {\n      _this.setState({\n        resolution: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVideoCodeChange\", function (e) {\n      _this.setState({\n        codec: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBandWidthChange\", function (e) {\n      _this.setState({\n        bandwidth: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFrameRateChange\", function (e) {\n      _this.setState({\n        frameRate: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDevChange\", function (checked) {\n      _this.setState({\n        isDevMode: checked\n      });\n    });\n\n    var _settings = props.settings;\n    _this.state = {\n      visible: false,\n      videoDevices: [],\n      audioDevices: [],\n      audioOutputDevices: [],\n      resolution: _settings.resolution,\n      bandwidth: _settings.bandwidth,\n      selectedAudioDevice: _settings.selectedAudioDevice,\n      selectedVideoDevice: _settings.selectedVideoDevice,\n      codec: _settings.codec,\n      isDevMode: _settings.isDevMode,\n      frameRate: _settings.frameRate\n    };\n\n    try {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      window.audioContext = new AudioContext();\n    } catch (e) {\n      console.log('Web Audio API not supported.');\n    }\n\n    return _this;\n  }\n\n  _createClass(MediaSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setDeviceState();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }, __jsx(Tooltip, {\n        title: \"System setup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        shape: \"circle\",\n        icon: \"setting\",\n        ghost: true,\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      })), __jsx(Modal, {\n        title: \"Settings\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        okText: \"Ok\",\n        cancelText: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"settings-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, \"Micphone\"), __jsx(\"div\", {\n        className: \"settings-item-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, __jsx(Select, {\n        value: this.state.selectedAudioDevice,\n        style: {\n          width: 350\n        },\n        onChange: this.handleAudioDeviceChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, this.state.audioDevices.map(function (device, index) {\n        return __jsx(Option, {\n          value: device.deviceId,\n          key: device.deviceId,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }\n        }, device.label);\n      })), __jsx(\"div\", {\n        ref: \"progressbar\",\n        style: {\n          width: this.state.audioLevel + 'px',\n          height: '10px',\n          backgroundColor: '#8dc63f',\n          marginTop: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }))), __jsx(\"div\", {\n        className: \"settings-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, \"Camera\"), __jsx(\"div\", {\n        className: \"settings-item-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }, __jsx(Select, {\n        value: this.state.selectedVideoDevice,\n        style: {\n          width: 350\n        },\n        onChange: this.handleVideoDeviceChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, this.state.videoDevices.map(function (device, index) {\n        return __jsx(Option, {\n          value: device.deviceId,\n          key: device.deviceId,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }\n        }, device.label);\n      })), __jsx(\"div\", {\n        className: \"settings-video-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      }, __jsx(\"video\", {\n        id: \"previewVideo\",\n        ref: \"previewVideo\",\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      })))), __jsx(\"div\", {\n        className: \"settings-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, \"Resolution\"), __jsx(\"div\", {\n        className: \"settings-item-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, __jsx(Select, {\n        style: {\n          width: 350\n        },\n        value: this.state.resolution,\n        onChange: this.handleResolutionChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, __jsx(Option, {\n        value: \"qqvga\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, \"QQVGA(160x90)\"), __jsx(Option, {\n        value: \"qvga\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }, \"QVGA(320x180)\"), __jsx(Option, {\n        value: \"vga\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }, \"VGA(640x360)\"), __jsx(Option, {\n        value: \"shd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, \"SHD(960x540)\"), __jsx(Option, {\n        value: \"hd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, \"HD(1280x720)\")))), !this.props.isLoggedIn && __jsx(\"div\", {\n        className: \"settings-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }\n      }, \"Codec\"), __jsx(\"div\", {\n        className: \"settings-item-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }\n      }, __jsx(Select, {\n        style: {\n          width: 350\n        },\n        value: this.state.codec,\n        onChange: this.handleVideoCodeChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }\n      }, __jsx(Option, {\n        value: \"h264\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 19\n        }\n      }, \"H264\"), __jsx(Option, {\n        value: \"vp8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 19\n        }\n      }, \"VP8\"), __jsx(Option, {\n        value: \"vp9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 19\n        }\n      }, \"VP9\")))), __jsx(\"div\", {\n        className: \"settings-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, \"Bitrate\"), __jsx(\"div\", {\n        className: \"settings-item-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, __jsx(Select, {\n        style: {\n          width: 350\n        },\n        value: this.state.bandwidth,\n        onChange: this.handleBandWidthChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      }, __jsx(Option, {\n        value: \"100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }, \"Lowest(100kbps)\"), __jsx(Option, {\n        value: \"256\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      }, \"Low(256kbps)\"), __jsx(Option, {\n        value: \"512\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      }, \"Medium(512kbps)\"), __jsx(Option, {\n        value: \"1024\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      }, \"High(1Mbps)\"), __jsx(Option, {\n        value: \"4096\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }\n      }, \"Lan(4Mbps)\")))), __jsx(\"div\", {\n        className: \"settings-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"settings-item-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }\n      }, \"Frame Rate\"), __jsx(\"div\", {\n        className: \"settings-item-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }, __jsx(InputNumber, {\n        min: 1,\n        max: 30,\n        defaultValue: this.state.frameRate,\n        onChange: this.handleFrameRateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return MediaSettings;\n}(React.Component);\n\nexport { MediaSettings as default };\nMediaSettings.propTypes = {\n  onMediaSettingsChanged: PropTypes.func\n};","map":{"version":3,"sources":["/Users/Pravin/Study/nikhil/react/sample-app-web/src/components/Settings/index.js"],"names":["React","Button","InputNumber","Modal","Select","Tooltip","PropTypes","attachMediaStream","closeMediaStream","updateInputDevices","SoundMeter","Option","MediaSettings","props","then","data","state","selectedAudioDevice","audioDevices","length","setState","deviceId","selectedVideoDevice","videoDevices","audioOutputDevices","map","device","index","console","log","JSON","stringify","val","window","soundMeter","instant","toFixed","audioLevel","visible","setTimeout","soundMeterProcess","stream","videoElement","refs","audioSource","videoSource","audioContext","constraints","audio","exact","undefined","video","navigator","mediaDevices","getUserMedia","connectToSource","setDeviceState","error","setLocalStreamError","startPreview","e","stopPreview","onMediaSettingsChanged","resolution","bandwidth","codec","frameRate","isDevMode","settings","checked","AudioContext","webkitAudioContext","showModal","handleOk","handleCancel","width","handleAudioDeviceChange","label","height","backgroundColor","marginTop","handleVideoDeviceChange","objectFit","handleResolutionChange","isLoggedIn","handleVideoCodeChange","handleBandWidthChange","handleFrameRateChange","Component","propTypes","func"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,OAA7C,QAA4D,MAA5D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,kBAHF,QAIO,aAJP;AAKA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,MAAM,GAAGP,MAAM,CAACO,MAAtB;;IACqBC,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,qEAyBF,YAAM;AACrBJ,MAAAA,kBAAkB,GAAGK,IAArB,CAA0B,UAAAC,IAAI,EAAI;AAChC,YACE,MAAKC,KAAL,CAAWC,mBAAX,KAAmC,EAAnC,IACAF,IAAI,CAACG,YAAL,CAAkBC,MAAlB,GAA2B,CAF7B,EAGE;AACA,gBAAKC,QAAL,CAAc;AAAEH,YAAAA,mBAAmB,EAAEF,IAAI,CAACG,YAAL,CAAkB,CAAlB,EAAqBG;AAA5C,WAAd;AACD;;AACD,YACE,MAAKL,KAAL,CAAWM,mBAAX,KAAmC,EAAnC,IACAP,IAAI,CAACQ,YAAL,CAAkBJ,MAAlB,GAA2B,CAF7B,EAGE;AACA,gBAAKC,QAAL,CAAc;AAAEE,YAAAA,mBAAmB,EAAEP,IAAI,CAACQ,YAAL,CAAkB,CAAlB,EAAqBF;AAA5C,WAAd;AACD;;AAED,cAAKD,QAAL,CAAc;AACZG,UAAAA,YAAY,EAAER,IAAI,CAACQ,YADP;AAEZL,UAAAA,YAAY,EAAEH,IAAI,CAACG,YAFP;AAGZM,UAAAA,kBAAkB,EAAET,IAAI,CAACS;AAHb,SAAd;;AAMA,cAAKR,KAAL,CAAWE,YAAX,CAAwBO,GAAxB,CAA4B,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC7C,cAAI,MAAKX,KAAL,CAAWC,mBAAX,IAAkCS,MAAM,CAACL,QAA7C,EAAuD;AACrDO,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAvC;AACD;AACF,SAJD;;AAKA,cAAKV,KAAL,CAAWO,YAAX,CAAwBE,GAAxB,CAA4B,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC7C,cAAI,MAAKX,KAAL,CAAWM,mBAAX,IAAkCI,MAAM,CAACL,QAA7C,EAAuD;AACrDO,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAvC;AACD;AACF,SAJD;AAKD,OA9BD;AA+BD,KAzDkB;;AAAA,wEA+DC,YAAM;AACxB,UAAIM,GAAG,GAAGC,MAAM,CAACC,UAAP,CAAkBC,OAAlB,CAA0BC,OAA1B,CAAkC,CAAlC,IAAuC,GAAvC,GAA6C,CAAvD;;AACA,YAAKhB,QAAL,CAAc;AAAEiB,QAAAA,UAAU,EAAEL;AAAd,OAAd;;AACA,UAAI,MAAKhB,KAAL,CAAWsB,OAAf,EAAwBC,UAAU,CAAC,MAAKC,iBAAN,EAAyB,GAAzB,CAAV;AACzB,KAnEkB;;AAAA,mEAqEJ,YAAM;AACnB,UAAIP,MAAM,CAACQ,MAAX,EAAmB;AACjBjC,QAAAA,gBAAgB,CAACyB,MAAM,CAACQ,MAAR,CAAhB;AACD;;AACD,UAAIC,YAAY,GAAG,MAAKC,IAAL,CAAU,cAAV,CAAnB;AACA,UAAIC,WAAW,GAAG,MAAK5B,KAAL,CAAWC,mBAA7B;AACA,UAAI4B,WAAW,GAAG,MAAK7B,KAAL,CAAWM,mBAA7B;AACA,YAAKY,UAAL,GAAkBD,MAAM,CAACC,UAAP,GAAoB,IAAIxB,UAAJ,CAAeuB,MAAM,CAACa,YAAtB,CAAtC;AACA,UAAIN,iBAAiB,GAAG,MAAKA,iBAA7B;AACA,UAAIO,WAAW,GAAG;AAChBC,QAAAA,KAAK,EAAE;AAAE3B,UAAAA,QAAQ,EAAEuB,WAAW,GAAG;AAAEK,YAAAA,KAAK,EAAEL;AAAT,WAAH,GAA4BM;AAAnD,SADS;AAEhBC,QAAAA,KAAK,EAAE;AAAE9B,UAAAA,QAAQ,EAAEwB,WAAW,GAAG;AAAEI,YAAAA,KAAK,EAAEJ;AAAT,WAAH,GAA4BK;AAAnD;AAFS,OAAlB;AAIAE,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgBP,WADhB,EAEGjC,IAFH,CAEQ,UAAA2B,MAAM,EAAI;AACdR,QAAAA,MAAM,CAACQ,MAAP,GAAgBA,MAAhB,CADc,CACU;AACxB;;AACAlC,QAAAA,iBAAiB,CAACmC,YAAD,EAAeD,MAAf,CAAjB;AACAP,QAAAA,UAAU,CAACqB,eAAX,CAA2Bd,MAA3B;AACAF,QAAAA,UAAU,CAACC,iBAAD,EAAoB,GAApB,CAAV;;AACA,cAAKgB,cAAL;AACD,OATH,WAUS,UAAAC,KAAK,EAAI;AACd,cAAK5C,KAAL,CAAW6C,mBAAX,CAA+BD,KAA/B;AACD,OAZH;AAaD,KA/FkB;;AAAA,kEAiGL,YAAM;AAClB,UAAIxB,MAAM,CAACQ,MAAX,EAAmB;AACjBjC,QAAAA,gBAAgB,CAACyB,MAAM,CAACQ,MAAR,CAAhB;AACD;AACF,KArGkB;;AAAA,gEAyGP,YAAM;AAChB,YAAKrB,QAAL,CAAc;AACZkB,QAAAA,OAAO,EAAE;AADG,OAAd;;AAGAC,MAAAA,UAAU,CAAC,MAAKoB,YAAN,EAAoB,GAApB,CAAV;AACD,KA9GkB;;AAAA,+DAgHR,UAAAC,CAAC,EAAI;AACd,YAAKxC,QAAL,CAAc;AACZkB,QAAAA,OAAO,EAAE;AADG,OAAd;;AAGA,YAAKuB,WAAL;;AACA,UAAI,MAAKhD,KAAL,CAAWiD,sBAAX,KAAsCZ,SAA1C,EAAqD;AACnD,cAAKrC,KAAL,CAAWiD,sBAAX,CACE,MAAK9C,KAAL,CAAWC,mBADb,EAEE,MAAKD,KAAL,CAAWM,mBAFb,EAGE,MAAKN,KAAL,CAAW+C,UAHb,EAIE,MAAK/C,KAAL,CAAWgD,SAJb,EAKE,MAAKhD,KAAL,CAAWiD,KALb,EAME,MAAKjD,KAAL,CAAWkD,SANb,EAOE,MAAKlD,KAAL,CAAWmD,SAPb,EAQE,IARF;AAUD;AACF,KAjIkB;;AAAA,mEAmIJ,UAAAP,CAAC,EAAI;AAClB,UAAIQ,QAAQ,GAAG,MAAKvD,KAAL,CAAWuD,QAA1B;;AACA,YAAKhD,QAAL,iCAAmBgD,QAAnB;AAA6B9B,QAAAA,OAAO,EAAE;AAAtC;;AACA,YAAKuB,WAAL;AACD,KAvIkB;;AAAA,8EAyIO,UAAAD,CAAC,EAAI;AAC7B,YAAKxC,QAAL,CAAc;AAAEH,QAAAA,mBAAmB,EAAE2C;AAAvB,OAAd;;AACArB,MAAAA,UAAU,CAAC,MAAKoB,YAAN,EAAoB,GAApB,CAAV;AACD,KA5IkB;;AAAA,8EA8IO,UAAAC,CAAC,EAAI;AAC7B,YAAKxC,QAAL,CAAc;AAAEE,QAAAA,mBAAmB,EAAEsC;AAAvB,OAAd;;AACArB,MAAAA,UAAU,CAAC,MAAKoB,YAAN,EAAoB,GAApB,CAAV;AACD,KAjJkB;;AAAA,6EAmJM,UAAAC,CAAC,EAAI;AAC5B,YAAKxC,QAAL,CAAc;AAAE2C,QAAAA,UAAU,EAAEH;AAAd,OAAd;AACD,KArJkB;;AAAA,4EAuJK,UAAAA,CAAC,EAAI;AAC3B,YAAKxC,QAAL,CAAc;AAAE6C,QAAAA,KAAK,EAAEL;AAAT,OAAd;AACD,KAzJkB;;AAAA,4EA2JK,UAAAA,CAAC,EAAI;AAC3B,YAAKxC,QAAL,CAAc;AAAE4C,QAAAA,SAAS,EAAEJ;AAAb,OAAd;AACD,KA7JkB;;AAAA,4EA+JK,UAAAA,CAAC,EAAI;AAC3B,YAAKxC,QAAL,CAAc;AAAE8C,QAAAA,SAAS,EAAEN;AAAb,OAAd;AACD,KAjKkB;;AAAA,sEAmKD,UAAAS,OAAO,EAAI;AAC3B,YAAKjD,QAAL,CAAc;AACZ+C,QAAAA,SAAS,EAAEE;AADC,OAAd;AAGD,KAvKkB;;AAEjB,QAAID,SAAQ,GAAGvD,KAAK,CAACuD,QAArB;AACA,UAAKpD,KAAL,GAAa;AACXsB,MAAAA,OAAO,EAAE,KADE;AAEXf,MAAAA,YAAY,EAAE,EAFH;AAGXL,MAAAA,YAAY,EAAE,EAHH;AAIXM,MAAAA,kBAAkB,EAAE,EAJT;AAKXuC,MAAAA,UAAU,EAAEK,SAAQ,CAACL,UALV;AAMXC,MAAAA,SAAS,EAAEI,SAAQ,CAACJ,SANT;AAOX/C,MAAAA,mBAAmB,EAAEmD,SAAQ,CAACnD,mBAPnB;AAQXK,MAAAA,mBAAmB,EAAE8C,SAAQ,CAAC9C,mBARnB;AASX2C,MAAAA,KAAK,EAAEG,SAAQ,CAACH,KATL;AAUXE,MAAAA,SAAS,EAAEC,SAAQ,CAACD,SAVT;AAWXD,MAAAA,SAAS,EAAEE,SAAQ,CAACF;AAXT,KAAb;;AAcA,QAAI;AACFjC,MAAAA,MAAM,CAACqC,YAAP,GAAsBrC,MAAM,CAACqC,YAAP,IAAuBrC,MAAM,CAACsC,kBAApD;AACAtC,MAAAA,MAAM,CAACa,YAAP,GAAsB,IAAIwB,YAAJ,EAAtB;AACD,KAHD,CAGE,OAAOV,CAAP,EAAU;AACVhC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;;AAtBgB;AAuBlB;;;;wCAoCmB;AAClB,WAAK2B,cAAL;AACD;;;2CA0CsB,CAAE;;;6BAkEhB;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,OAAO,EAAE,KAAKgB,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,EAWE,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,OAAO,EAAE,KAAKxD,KAAL,CAAWsB,OAFtB;AAGE,QAAA,IAAI,EAAE,KAAKmC,QAHb;AAIE,QAAA,QAAQ,EAAE,KAAKC,YAJjB;AAKE,QAAA,MAAM,EAAC,IALT;AAME,QAAA,UAAU,EAAC,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAK1D,KAAL,CAAWC,mBADpB;AAEE,QAAA,KAAK,EAAE;AAAE0D,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,QAAQ,EAAE,KAAKC,uBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAK5D,KAAL,CAAWE,YAAX,CAAwBO,GAAxB,CAA4B,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC9C,eACE,MAAC,MAAD;AAAQ,UAAA,KAAK,EAAED,MAAM,CAACL,QAAtB;AAAgC,UAAA,GAAG,EAAEK,MAAM,CAACL,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGK,MAAM,CAACmD,KADV,CADF;AAKD,OANA,CALH,CADF,EAcE;AACE,QAAA,GAAG,EAAC,aADN;AAEE,QAAA,KAAK,EAAE;AACLF,UAAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWqB,UAAX,GAAwB,IAD1B;AAELyC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,eAAe,EAAE,SAHZ;AAILC,UAAAA,SAAS,EAAE;AAJN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CAFF,CARF,EAmCE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWM,mBADpB;AAEE,QAAA,KAAK,EAAE;AAAEqD,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,QAAQ,EAAE,KAAKM,uBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKjE,KAAL,CAAWO,YAAX,CAAwBE,GAAxB,CAA4B,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC9C,eACE,MAAC,MAAD;AAAQ,UAAA,KAAK,EAAED,MAAM,CAACL,QAAtB;AAAgC,UAAA,GAAG,EAAEK,MAAM,CAACL,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGK,MAAM,CAACmD,KADV,CADF;AAKD,OANA,CALH,CADF,EAcE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,cADL;AAEE,QAAA,GAAG,EAAC,cAFN;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,WAAW,MAJb;AAKE,QAAA,KAAK,EAAE,IALT;AAME,QAAA,KAAK,EAAE;AACLF,UAAAA,KAAK,EAAE,MADF;AAELG,UAAAA,MAAM,EAAE,MAFH;AAGLI,UAAAA,SAAS,EAAE;AAHN,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdF,CAFF,CAnCF,EAmEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEP,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,KAAK,EAAE,KAAK3D,KAAL,CAAW+C,UAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKoB,sBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAME,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANF,EAOE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,EAQE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,EASE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,CADF,CAFF,CAnEF,EAmFG,CAAC,KAAKtE,KAAL,CAAWuE,UAAZ,IACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWiD,KAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKoB,qBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EAOE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,CAFF,CApFJ,EAmGE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEV,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWgD,SAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKsB,qBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,EAME,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,EAOE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,EAQE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,EASE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF,CAFF,CAnGF,EAmHE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AACE,QAAA,GAAG,EAAE,CADP;AAEE,QAAA,GAAG,EAAE,EAFP;AAGE,QAAA,YAAY,EAAE,KAAKtE,KAAL,CAAWkD,SAH3B;AAIE,QAAA,QAAQ,EAAE,KAAKqB,qBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CAnHF,CAXF,CADF;AA6ID;;;;EAxTwCvF,KAAK,CAACwF,S;;SAA5B5E,a;AA2TrBA,aAAa,CAAC6E,SAAd,GAA0B;AACxB3B,EAAAA,sBAAsB,EAAExD,SAAS,CAACoF;AADV,CAA1B","sourcesContent":["import React from 'react';\nimport { Button, InputNumber, Modal, Select, Tooltip } from 'antd';\nimport PropTypes from 'prop-types';\nimport {\n  attachMediaStream,\n  closeMediaStream,\n  updateInputDevices,\n} from '../../utils';\nimport SoundMeter from './soundmeter';\n\nconst Option = Select.Option;\nexport default class MediaSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    let settings = props.settings;\n    this.state = {\n      visible: false,\n      videoDevices: [],\n      audioDevices: [],\n      audioOutputDevices: [],\n      resolution: settings.resolution,\n      bandwidth: settings.bandwidth,\n      selectedAudioDevice: settings.selectedAudioDevice,\n      selectedVideoDevice: settings.selectedVideoDevice,\n      codec: settings.codec,\n      isDevMode: settings.isDevMode,\n      frameRate: settings.frameRate,\n    };\n\n    try {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      window.audioContext = new AudioContext();\n    } catch (e) {\n      console.log('Web Audio API not supported.');\n    }\n  }\n\n  setDeviceState = () => {\n    updateInputDevices().then(data => {\n      if (\n        this.state.selectedAudioDevice === '' &&\n        data.audioDevices.length > 0\n      ) {\n        this.setState({ selectedAudioDevice: data.audioDevices[0].deviceId });\n      }\n      if (\n        this.state.selectedVideoDevice === '' &&\n        data.videoDevices.length > 0\n      ) {\n        this.setState({ selectedVideoDevice: data.videoDevices[0].deviceId });\n      }\n\n      this.setState({\n        videoDevices: data.videoDevices,\n        audioDevices: data.audioDevices,\n        audioOutputDevices: data.audioOutputDevices,\n      });\n\n      this.state.audioDevices.map((device, index) => {\n        if (this.state.selectedAudioDevice == device.deviceId) {\n          console.log('Selected audioDevice::' + JSON.stringify(device));\n        }\n      });\n      this.state.videoDevices.map((device, index) => {\n        if (this.state.selectedVideoDevice == device.deviceId) {\n          console.log('Selected videoDevice::' + JSON.stringify(device));\n        }\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.setDeviceState();\n  }\n\n  soundMeterProcess = () => {\n    var val = window.soundMeter.instant.toFixed(2) * 348 + 1;\n    this.setState({ audioLevel: val });\n    if (this.state.visible) setTimeout(this.soundMeterProcess, 100);\n  };\n\n  startPreview = () => {\n    if (window.stream) {\n      closeMediaStream(window.stream);\n    }\n    let videoElement = this.refs['previewVideo'];\n    let audioSource = this.state.selectedAudioDevice;\n    let videoSource = this.state.selectedVideoDevice;\n    this.soundMeter = window.soundMeter = new SoundMeter(window.audioContext);\n    let soundMeterProcess = this.soundMeterProcess;\n    let constraints = {\n      audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n      video: { deviceId: videoSource ? { exact: videoSource } : undefined },\n    };\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(stream => {\n        window.stream = stream; // make stream available to console\n        //videoElement.srcObject = stream;\n        attachMediaStream(videoElement, stream);\n        soundMeter.connectToSource(stream);\n        setTimeout(soundMeterProcess, 100);\n        this.setDeviceState();\n      })\n      .catch(error => {\n        this.props.setLocalStreamError(error);\n      });\n  };\n\n  stopPreview = () => {\n    if (window.stream) {\n      closeMediaStream(window.stream);\n    }\n  };\n\n  componentWillUnmount() {}\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n    setTimeout(this.startPreview, 100);\n  };\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    });\n    this.stopPreview();\n    if (this.props.onMediaSettingsChanged !== undefined) {\n      this.props.onMediaSettingsChanged(\n        this.state.selectedAudioDevice,\n        this.state.selectedVideoDevice,\n        this.state.resolution,\n        this.state.bandwidth,\n        this.state.codec,\n        this.state.frameRate,\n        this.state.isDevMode,\n        true\n      );\n    }\n  };\n\n  handleCancel = e => {\n    let settings = this.props.settings;\n    this.setState({ ...settings, visible: false });\n    this.stopPreview();\n  };\n\n  handleAudioDeviceChange = e => {\n    this.setState({ selectedAudioDevice: e });\n    setTimeout(this.startPreview, 100);\n  };\n\n  handleVideoDeviceChange = e => {\n    this.setState({ selectedVideoDevice: e });\n    setTimeout(this.startPreview, 100);\n  };\n\n  handleResolutionChange = e => {\n    this.setState({ resolution: e });\n  };\n\n  handleVideoCodeChange = e => {\n    this.setState({ codec: e });\n  };\n\n  handleBandWidthChange = e => {\n    this.setState({ bandwidth: e });\n  };\n\n  handleFrameRateChange = e => {\n    this.setState({ frameRate: e });\n  };\n\n  handleDevChange = checked => {\n    this.setState({\n      isDevMode: checked,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {\n          <Tooltip title=\"System setup\">\n            <Button\n              shape=\"circle\"\n              icon=\"setting\"\n              ghost\n              onClick={this.showModal}\n            />\n          </Tooltip>\n        }\n        <Modal\n          title=\"Settings\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"Ok\"\n          cancelText=\"Cancel\"\n        >\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Micphone</span>\n            <div className=\"settings-item-right\">\n              <Select\n                value={this.state.selectedAudioDevice}\n                style={{ width: 350 }}\n                onChange={this.handleAudioDeviceChange}\n              >\n                {this.state.audioDevices.map((device, index) => {\n                  return (\n                    <Option value={device.deviceId} key={device.deviceId}>\n                      {device.label}\n                    </Option>\n                  );\n                })}\n              </Select>\n              <div\n                ref=\"progressbar\"\n                style={{\n                  width: this.state.audioLevel + 'px',\n                  height: '10px',\n                  backgroundColor: '#8dc63f',\n                  marginTop: '20px',\n                }}\n              ></div>\n            </div>\n          </div>\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Camera</span>\n            <div className=\"settings-item-right\">\n              <Select\n                value={this.state.selectedVideoDevice}\n                style={{ width: 350 }}\n                onChange={this.handleVideoDeviceChange}\n              >\n                {this.state.videoDevices.map((device, index) => {\n                  return (\n                    <Option value={device.deviceId} key={device.deviceId}>\n                      {device.label}\n                    </Option>\n                  );\n                })}\n              </Select>\n              <div className=\"settings-video-container\">\n                <video\n                  id=\"previewVideo\"\n                  ref=\"previewVideo\"\n                  autoPlay\n                  playsInline\n                  muted={true}\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'contain',\n                  }}\n                ></video>\n              </div>\n            </div>\n          </div>\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Resolution</span>\n            <div className=\"settings-item-right\">\n              <Select\n                style={{ width: 350 }}\n                value={this.state.resolution}\n                onChange={this.handleResolutionChange}\n              >\n                <Option value=\"qqvga\">QQVGA(160x90)</Option>\n                <Option value=\"qvga\">QVGA(320x180)</Option>\n                <Option value=\"vga\">VGA(640x360)</Option>\n                <Option value=\"shd\">SHD(960x540)</Option>\n                <Option value=\"hd\">HD(1280x720)</Option>\n              </Select>\n            </div>\n          </div>\n          {!this.props.isLoggedIn && (\n            <div className=\"settings-item\">\n              <span className=\"settings-item-left\">Codec</span>\n              <div className=\"settings-item-right\">\n                <Select\n                  style={{ width: 350 }}\n                  value={this.state.codec}\n                  onChange={this.handleVideoCodeChange}\n                >\n                  <Option value=\"h264\">H264</Option>\n                  <Option value=\"vp8\">VP8</Option>\n                  <Option value=\"vp9\">VP9</Option>\n                </Select>\n              </div>\n            </div>\n          )}\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Bitrate</span>\n            <div className=\"settings-item-right\">\n              <Select\n                style={{ width: 350 }}\n                value={this.state.bandwidth}\n                onChange={this.handleBandWidthChange}\n              >\n                <Option value=\"100\">Lowest(100kbps)</Option>\n                <Option value=\"256\">Low(256kbps)</Option>\n                <Option value=\"512\">Medium(512kbps)</Option>\n                <Option value=\"1024\">High(1Mbps)</Option>\n                <Option value=\"4096\">Lan(4Mbps)</Option>\n              </Select>\n            </div>\n          </div>\n          <div className=\"settings-item\">\n            <span className=\"settings-item-left\">Frame Rate</span>\n            <div className=\"settings-item-right\">\n              <InputNumber\n                min={1}\n                max={30}\n                defaultValue={this.state.frameRate}\n                onChange={this.handleFrameRateChange}\n              />\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nMediaSettings.propTypes = {\n  onMediaSettingsChanged: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}